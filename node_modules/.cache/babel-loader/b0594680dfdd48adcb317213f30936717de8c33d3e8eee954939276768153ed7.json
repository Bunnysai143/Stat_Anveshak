{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\durga\\\\Downloads\\\\stat-anv\\\\stat\\\\src\\\\components\\\\InferentialStatistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Bar, Pie, Line } from \"react-chartjs-2\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend, ArcElement, PointElement, LineElement);\nconst InferentialStatisticsVisualiser = () => {\n  _s();\n  const [selectedTopic, setSelectedTopic] = useState(\"Hypothesis Testing\");\n\n  // Chart Data\n  const chartData = {\n    \"Hypothesis Testing\": {\n      type: \"Bar\",\n      data: {\n        labels: [\"Z-Test\", \"T-Test\", \"Chi-Square Test\", \"ANOVA\"],\n        datasets: [{\n          label: \"Frequency of Use\",\n          data: [20, 25, 15, 30],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"]\n        }]\n      }\n    },\n    \"P-values and Significance Levels\": {\n      type: \"Pie\",\n      data: {\n        labels: [\"0.01\", \"0.05\", \"0.1\", \"Others\"],\n        datasets: [{\n          label: \"Proportion of Use\",\n          data: [40, 35, 15, 10],\n          backgroundColor: [\"#4BC0C0\", \"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }]\n      }\n    },\n    \"Confidence Intervals\": {\n      type: \"Bar\",\n      data: {\n        labels: [\"95%\", \"99%\", \"90%\"],\n        datasets: [{\n          label: \"Confidence Interval Usage\",\n          data: [50, 30, 20],\n          backgroundColor: [\"#36A2EB\", \"#FFCE56\", \"#FF6384\"]\n        }]\n      }\n    },\n    \"Sampling Methods\": {\n      type: \"Pie\",\n      data: {\n        labels: [\"Random Sampling\", \"Stratified Sampling\", \"Cluster Sampling\"],\n        datasets: [{\n          label: \"Types of Sampling\",\n          data: [50, 30, 20],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }]\n      }\n    },\n    \"Data Distributions\": {\n      type: \"Bar\",\n      data: {\n        labels: [\"Normal\", \"Poisson\", \"Binomial\", \"Uniform\"],\n        datasets: [{\n          label: \"Data Distribution Types\",\n          data: [60, 15, 10, 15],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"]\n        }]\n      }\n    },\n    \"Central Tendency\": {\n      type: \"Pie\",\n      data: {\n        labels: [\"Mean\", \"Median\", \"Mode\"],\n        datasets: [{\n          label: \"Central Tendency Types\",\n          data: [50, 30, 20],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }]\n      }\n    },\n    \"Variance and Standard Deviation\": {\n      type: \"Bar\",\n      data: {\n        labels: [\"Variance\", \"Standard Deviation\", \"MAD\"],\n        datasets: [{\n          label: \"Dispersion Types\",\n          data: [40, 45, 15],\n          backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"]\n        }]\n      }\n    },\n    \"Linear Trends\": {\n      type: \"Line\",\n      data: {\n        labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\n        datasets: [{\n          label: \"Growth Trend\",\n          data: [10, 25, 35, 50, 60, 80, 95],\n          fill: false,\n          borderColor: \"#36A2EB\",\n          tension: 0.4,\n          borderWidth: 2,\n          pointRadius: 5,\n          pointBackgroundColor: \"#FF6384\",\n          pointHoverRadius: 8,\n          pointHoverBackgroundColor: \"#FF6384\",\n          animation: {\n            duration: 2000,\n            // Animation duration\n            easing: \"easeInOutQuad\"\n          }\n        }]\n      }\n    }\n  };\n\n  // Render Chart Based on Selected Topic\n  const renderChart = () => {\n    const chart = chartData[selectedTopic];\n    if (chart.type === \"Bar\") {\n      return /*#__PURE__*/_jsxDEV(Bar, {\n        data: chart.data,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: \"top\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 16\n      }, this);\n    }\n    if (chart.type === \"Pie\") {\n      return /*#__PURE__*/_jsxDEV(Pie, {\n        data: chart.data,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: \"right\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 16\n      }, this);\n    }\n    if (chart.type === \"Line\") {\n      return /*#__PURE__*/_jsxDEV(Line, {\n        data: chart.data,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: \"top\"\n            }\n          },\n          animation: {\n            duration: 3000,\n            easing: \"easeOutBounce\"\n          } // Animation for Line graph\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this);\n    }\n    return null;\n  };\n\n  // Test Visualization Accuracy\n  useEffect(() => {\n    const testVisualizationAccuracy = () => {\n      const testCases = [{\n        topic: \"Hypothesis Testing\",\n        expectedType: \"Bar\",\n        expectedLabels: [\"Z-Test\", \"T-Test\", \"Chi-Square Test\", \"ANOVA\"]\n      }, {\n        topic: \"P-values and Significance Levels\",\n        expectedType: \"Pie\",\n        expectedLabels: [\"0.01\", \"0.05\", \"0.1\", \"Others\"]\n      }, {\n        topic: \"Confidence Intervals\",\n        expectedType: \"Bar\",\n        expectedLabels: [\"95%\", \"99%\", \"90%\"]\n      }, {\n        topic: \"Sampling Methods\",\n        expectedType: \"Pie\",\n        expectedLabels: [\"Random Sampling\", \"Stratified Sampling\", \"Cluster Sampling\"]\n      }, {\n        topic: \"Data Distributions\",\n        expectedType: \"Bar\",\n        expectedLabels: [\"Normal\", \"Poisson\", \"Binomial\", \"Uniform\"]\n      }, {\n        topic: \"Central Tendency\",\n        expectedType: \"Pie\",\n        expectedLabels: [\"Mean\", \"Median\", \"Mode\"]\n      }, {\n        topic: \"Variance and Standard Deviation\",\n        expectedType: \"Bar\",\n        expectedLabels: [\"Variance\", \"Standard Deviation\", \"MAD\"]\n      }, {\n        topic: \"Linear Trends\",\n        expectedType: \"Line\",\n        expectedLabels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"]\n      }];\n      let passedTests = 0;\n      testCases.forEach(({\n        topic,\n        expectedType,\n        expectedLabels\n      }) => {\n        var _chart$data;\n        const chart = chartData[topic];\n\n        // Check Type\n        const isTypeCorrect = (chart === null || chart === void 0 ? void 0 : chart.type) === expectedType;\n\n        // Check Labels\n        const isLabelsCorrect = JSON.stringify(chart === null || chart === void 0 ? void 0 : (_chart$data = chart.data) === null || _chart$data === void 0 ? void 0 : _chart$data.labels) === JSON.stringify(expectedLabels);\n        if (isTypeCorrect && isLabelsCorrect) {\n          console.log(`✅ Test passed for topic: ${topic}`);\n          passedTests++;\n        } else {\n          console.error(`❌ Test failed for topic: ${topic}`);\n        }\n      });\n      console.log(`${passedTests} out of ${testCases.length} test cases passed.`);\n    };\n    testVisualizationAccuracy();\n  }, []);\n\n  // Render Component\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: styles.title,\n      children: \"Inferential Statistics Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.dropdownContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"topic-select\",\n        style: styles.label,\n        children: \"Select Topic:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"topic-select\",\n        style: styles.select,\n        value: selectedTopic,\n        onChange: e => setSelectedTopic(e.target.value),\n        children: Object.keys(chartData).map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic,\n          children: topic\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chartContainer,\n      children: renderChart()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 7\n  }, this);\n};\n\n// Styles\n_s(InferentialStatisticsVisualiser, \"5c7CZKXvaMIgto+Q7iMTH4KpuFc=\");\n_c = InferentialStatisticsVisualiser;\nconst styles = {\n  container: {\n    fontFamily: \"Arial, sans-serif\",\n    maxWidth: \"800px\",\n    margin: \"20px auto\",\n    padding: \"20px\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\n    backgroundColor: \"#f9f9f9\"\n  },\n  title: {\n    textAlign: \"center\",\n    color: \"#444\",\n    marginBottom: \"20px\"\n  },\n  dropdownContainer: {\n    textAlign: \"center\",\n    marginBottom: \"20px\"\n  },\n  label: {\n    fontSize: \"16px\",\n    marginRight: \"10px\",\n    color: \"#333\"\n  },\n  select: {\n    padding: \"10px\",\n    fontSize: \"16px\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    outline: \"none\",\n    cursor: \"pointer\"\n  },\n  chartContainer: {\n    marginTop: \"20px\",\n    padding: \"20px\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\"\n  }\n};\nexport default InferentialStatisticsVisualiser;\nvar _c;\n$RefreshReg$(_c, \"InferentialStatisticsVisualiser\");","map":{"version":3,"names":["React","useState","useEffect","Bar","Pie","Line","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ArcElement","PointElement","LineElement","jsxDEV","_jsxDEV","register","InferentialStatisticsVisualiser","_s","selectedTopic","setSelectedTopic","chartData","type","data","labels","datasets","label","backgroundColor","fill","borderColor","tension","borderWidth","pointRadius","pointBackgroundColor","pointHoverRadius","pointHoverBackgroundColor","animation","duration","easing","renderChart","chart","options","responsive","plugins","legend","position","fileName","_jsxFileName","lineNumber","columnNumber","testVisualizationAccuracy","testCases","topic","expectedType","expectedLabels","passedTests","forEach","_chart$data","isTypeCorrect","isLabelsCorrect","JSON","stringify","console","log","error","length","style","styles","container","children","title","dropdownContainer","htmlFor","id","select","value","onChange","e","target","Object","keys","map","chartContainer","_c","fontFamily","maxWidth","margin","padding","border","borderRadius","boxShadow","textAlign","color","marginBottom","fontSize","marginRight","outline","cursor","marginTop","$RefreshReg$"],"sources":["C:/Users/durga/Downloads/stat-anv/stat/src/components/InferentialStatistics.js"],"sourcesContent":["  import React, { useState, useEffect } from \"react\";\r\n  import { Bar, Pie, Line } from \"react-chartjs-2\";\r\n\r\n  import {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n    PointElement,\r\n    LineElement,\r\n  } from \"chart.js\";\r\n\r\n  ChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n    ArcElement,\r\n    PointElement,\r\n    LineElement\r\n  );\r\n\r\n  const InferentialStatisticsVisualiser = () => {\r\n    const [selectedTopic, setSelectedTopic] = useState(\"Hypothesis Testing\");\r\n\r\n    // Chart Data\r\n    const chartData = {\r\n      \"Hypothesis Testing\": {\r\n        type: \"Bar\",\r\n        data: {\r\n          labels: [\"Z-Test\", \"T-Test\", \"Chi-Square Test\", \"ANOVA\"],\r\n          datasets: [\r\n            {\r\n              label: \"Frequency of Use\",\r\n              data: [20, 25, 15, 30],\r\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"P-values and Significance Levels\": {\r\n        type: \"Pie\",\r\n        data: {\r\n          labels: [\"0.01\", \"0.05\", \"0.1\", \"Others\"],\r\n          datasets: [\r\n            {\r\n              label: \"Proportion of Use\",\r\n              data: [40, 35, 15, 10],\r\n              backgroundColor: [\"#4BC0C0\", \"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"Confidence Intervals\": {\r\n        type: \"Bar\",\r\n        data: {\r\n          labels: [\"95%\", \"99%\", \"90%\"],\r\n          datasets: [\r\n            {\r\n              label: \"Confidence Interval Usage\",\r\n              data: [50, 30, 20],\r\n              backgroundColor: [\"#36A2EB\", \"#FFCE56\", \"#FF6384\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"Sampling Methods\": {\r\n        type: \"Pie\",\r\n        data: {\r\n          labels: [\"Random Sampling\", \"Stratified Sampling\", \"Cluster Sampling\"],\r\n          datasets: [\r\n            {\r\n              label: \"Types of Sampling\",\r\n              data: [50, 30, 20],\r\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"Data Distributions\": {\r\n        type: \"Bar\",\r\n        data: {\r\n          labels: [\"Normal\", \"Poisson\", \"Binomial\", \"Uniform\"],\r\n          datasets: [\r\n            {\r\n              label: \"Data Distribution Types\",\r\n              data: [60, 15, 10, 15],\r\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\", \"#4BC0C0\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"Central Tendency\": {\r\n        type: \"Pie\",\r\n        data: {\r\n          labels: [\"Mean\", \"Median\", \"Mode\"],\r\n          datasets: [\r\n            {\r\n              label: \"Central Tendency Types\",\r\n              data: [50, 30, 20],\r\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"Variance and Standard Deviation\": {\r\n        type: \"Bar\",\r\n        data: {\r\n          labels: [\"Variance\", \"Standard Deviation\", \"MAD\"],\r\n          datasets: [\r\n            {\r\n              label: \"Dispersion Types\",\r\n              data: [40, 45, 15],\r\n              backgroundColor: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"],\r\n            },\r\n          ],\r\n        },\r\n      },\r\n      \"Linear Trends\": {\r\n        type: \"Line\",\r\n        data: {\r\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"],\r\n          datasets: [\r\n            {\r\n              label: \"Growth Trend\",\r\n              data: [10, 25, 35, 50, 60, 80, 95],\r\n              fill: false,\r\n              borderColor: \"#36A2EB\",\r\n              tension: 0.4,\r\n              borderWidth: 2,\r\n              pointRadius: 5,\r\n              pointBackgroundColor: \"#FF6384\",\r\n              pointHoverRadius: 8,\r\n              pointHoverBackgroundColor: \"#FF6384\",\r\n              animation: {\r\n                duration: 2000, // Animation duration\r\n                easing: \"easeInOutQuad\",\r\n              },\r\n            },\r\n          ],\r\n        },\r\n      },\r\n    };\r\n\r\n    // Render Chart Based on Selected Topic\r\n    const renderChart = () => {\r\n      const chart = chartData[selectedTopic];\r\n      if (chart.type === \"Bar\") {\r\n        return <Bar data={chart.data} options={{ responsive: true, plugins: { legend: { position: \"top\" } } }} />;\r\n      }\r\n      if (chart.type === \"Pie\") {\r\n        return <Pie data={chart.data} options={{ responsive: true, plugins: { legend: { position: \"right\" } } }} />;\r\n      }\r\n      if (chart.type === \"Line\") {\r\n        return (\r\n          <Line\r\n            data={chart.data}\r\n            options={{\r\n              responsive: true,\r\n              plugins: { legend: { position: \"top\" } }, \r\n              animation: { duration: 3000, easing: \"easeOutBounce\" }, // Animation for Line graph\r\n            }}\r\n          />\r\n        );\r\n      }\r\n      return null;\r\n    };\r\n\r\n    // Test Visualization Accuracy\r\n    useEffect(() => {\r\n      const testVisualizationAccuracy = () => {\r\n        const testCases = [\r\n          { topic: \"Hypothesis Testing\", expectedType: \"Bar\", expectedLabels: [\"Z-Test\", \"T-Test\", \"Chi-Square Test\", \"ANOVA\"] },\r\n          { topic: \"P-values and Significance Levels\", expectedType: \"Pie\", expectedLabels: [\"0.01\", \"0.05\", \"0.1\", \"Others\"] },\r\n          { topic: \"Confidence Intervals\", expectedType: \"Bar\", expectedLabels: [\"95%\", \"99%\", \"90%\"] },\r\n          { topic: \"Sampling Methods\", expectedType: \"Pie\", expectedLabels: [\"Random Sampling\", \"Stratified Sampling\", \"Cluster Sampling\"] },\r\n          { topic: \"Data Distributions\", expectedType: \"Bar\", expectedLabels: [\"Normal\", \"Poisson\", \"Binomial\", \"Uniform\"] },\r\n          { topic: \"Central Tendency\", expectedType: \"Pie\", expectedLabels: [\"Mean\", \"Median\", \"Mode\"] },\r\n          { topic: \"Variance and Standard Deviation\", expectedType: \"Bar\", expectedLabels: [\"Variance\", \"Standard Deviation\", \"MAD\"] },\r\n          { topic: \"Linear Trends\", expectedType: \"Line\", expectedLabels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\"] },\r\n        ];\r\n\r\n        let passedTests = 0;\r\n\r\n        testCases.forEach(({ topic, expectedType, expectedLabels }) => {\r\n          const chart = chartData[topic];\r\n\r\n          // Check Type\r\n          const isTypeCorrect = chart?.type === expectedType;\r\n\r\n          // Check Labels\r\n          const isLabelsCorrect = JSON.stringify(chart?.data?.labels) === JSON.stringify(expectedLabels);\r\n\r\n          if (isTypeCorrect && isLabelsCorrect) {\r\n            console.log(`✅ Test passed for topic: ${topic}`);\r\n            passedTests++;\r\n          } else {\r\n            console.error(`❌ Test failed for topic: ${topic}`);\r\n          }\r\n        });\r\n\r\n        console.log(`${passedTests} out of ${testCases.length} test cases passed.`);\r\n      };\r\n\r\n      testVisualizationAccuracy();\r\n    }, []);\r\n\r\n    // Render Component\r\n    return (\r\n      <div style={styles.container}>\r\n        <h1 style={styles.title}>Inferential Statistics Visualization</h1>\r\n        <div style={styles.dropdownContainer}>\r\n          <label htmlFor=\"topic-select\" style={styles.label}>Select Topic:</label>\r\n          <select\r\n            id=\"topic-select\"\r\n            style={styles.select}\r\n            value={selectedTopic}\r\n            onChange={(e) => setSelectedTopic(e.target.value)}\r\n          >\r\n            {Object.keys(chartData).map((topic) => (\r\n              <option key={topic} value={topic}>\r\n                {topic}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div style={styles.chartContainer}>{renderChart()}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Styles\r\n  const styles = {\r\n    container: {\r\n      fontFamily: \"Arial, sans-serif\",\r\n      maxWidth: \"800px\",\r\n      margin: \"20px auto\",\r\n      padding: \"20px\",\r\n      border: \"1px solid #ccc\",\r\n      borderRadius: \"12px\",\r\n      boxShadow: \"0 4px 12px rgba(0, 0, 0, 0.15)\",\r\n      backgroundColor: \"#f9f9f9\",\r\n    },\r\n    title: {\r\n      textAlign: \"center\",\r\n      color: \"#444\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    dropdownContainer: {\r\n      textAlign: \"center\",\r\n      marginBottom: \"20px\",\r\n    },\r\n    label: {\r\n      fontSize: \"16px\",\r\n      marginRight: \"10px\",\r\n      color: \"#333\",\r\n    },\r\n    select: {\r\n      padding: \"10px\",\r\n      fontSize: \"16px\",\r\n      borderRadius: \"8px\",\r\n      border: \"1px solid #ccc\",\r\n      outline: \"none\",\r\n      cursor: \"pointer\",\r\n    },\r\n    chartContainer: {\r\n      marginTop: \"20px\",\r\n      padding: \"20px\",\r\n      backgroundColor: \"#fff\",\r\n      borderRadius: \"8px\",\r\n      boxShadow: \"0 2px 8px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n  };\r\n\r\n  export default InferentialStatisticsVisualiser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}