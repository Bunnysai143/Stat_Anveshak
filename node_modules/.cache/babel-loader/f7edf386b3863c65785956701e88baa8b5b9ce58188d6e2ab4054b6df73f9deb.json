{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\durga\\\\Downloads\\\\stat-anv\\\\stat\\\\src\\\\components\\\\InferentialStatistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Line, Bar, Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst InferentialStatisticsVisualiser = ({\n  data,\n  columnHeaders\n}) => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('hypothesis');\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Categories'\n        }\n      },\n      y: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Values'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  const chartData = {\n    zTest: {\n      labels: columnHeaders || ['No Data'],\n      datasets: [{\n        label: 'Z-Distribution',\n        data: data.map(item => item[5]),\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.4,\n        fill: false\n      }]\n    },\n    tTest: {\n      labels: columnHeaders || ['No Data'],\n      datasets: [{\n        label: 'Sample Distribution',\n        data: data.map(item => item[2]),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }]\n    },\n    chiSquare: {\n      labels: columnHeaders || ['No Data'],\n      datasets: [{\n        label: 'Observed',\n        data: data.map(item => item[3]),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Expected',\n        data: data.map(item => item[4]),\n        backgroundColor: 'rgba(153, 102, 255, 0.5)'\n      }]\n    },\n    anova: {\n      labels: columnHeaders || ['No Data'],\n      datasets: [{\n        label: 'ANOVA',\n        data: data.map(item => {\n          var _item$;\n          return (_item$ = item[9]) !== null && _item$ !== void 0 ? _item$ : 0;\n        }),\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }]\n    },\n    confidence: {\n      labels: columnHeaders || ['No Data'],\n      datasets: [{\n        label: 'Mean',\n        data: data.map(item => item[5]),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        type: 'line'\n      }, {\n        label: 'Lower Bound',\n        data: data.map(item => item[5] - 10),\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        borderColor: 'rgba(75, 192, 192, 0.1)',\n        type: 'line'\n      }, {\n        label: 'Upper Bound',\n        data: data.map(item => item[5] + 10),\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        borderColor: 'rgba(75, 192, 192, 0.1)',\n        type: 'line'\n      }]\n    },\n    randomSampling: {\n      labels: data.map((_, index) => `Sample ${index + 1}`),\n      datasets: [{\n        label: 'Random Samples',\n        data: data.map((item, index) => {\n          var _item$2;\n          return {\n            x: index + 1,\n            y: (_item$2 = item[6]) !== null && _item$2 !== void 0 ? _item$2 : 0\n          };\n        }),\n        backgroundColor: 'rgb(75, 192, 192)'\n      }]\n    },\n    stratified: {\n      labels: columnHeaders || ['No Data'],\n      datasets: [{\n        label: 'Stratum Size',\n        data: data.map(item => {\n          var _item$3;\n          return (_item$3 = item[7]) !== null && _item$3 !== void 0 ? _item$3 : 0;\n        }),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Sample Size',\n        data: data.map(item => {\n          var _item$4;\n          return (_item$4 = item[8]) !== null && _item$4 !== void 0 ? _item$4 : 0;\n        }),\n        backgroundColor: 'rgba(153, 102, 255, 0.5)'\n      }]\n    },\n    clusterSampling: {\n      labels: data.map((_, index) => `Cluster ${index + 1}`),\n      datasets: [{\n        label: 'Cluster Samples',\n        data: data.map(item => {\n          var _item$5;\n          return (_item$5 = item[10]) !== null && _item$5 !== void 0 ? _item$5 : 0;\n        }),\n        backgroundColor: 'rgb(255, 159, 64)'\n      }]\n    }\n  };\n  const renderChart = type => {\n    const charts = {\n      hypothesis: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Z-Test Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData.zTest,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"T-Test Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.tTest,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Chi-Square Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.chiSquare,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"ANOVA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.anova,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this),\n      confidence: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Confidence Intervals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '300px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData.confidence,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this),\n      sampling: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Random Sampling Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.randomSampling,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Stratified Sampling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.stratified,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Cluster Sampling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.clusterSampling,\n              options: {\n                ...options,\n                scales: {\n                  x: {\n                    type: 'category',\n                    title: {\n                      display: true,\n                      text: 'Clusters'\n                    }\n                  },\n                  y: {\n                    type: 'linear',\n                    title: {\n                      display: true,\n                      text: 'Samples'\n                    }\n                  }\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    };\n    return charts[type] || null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Inferential Statistics Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"px-4 py-2 border rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hypothesis\",\n          children: \"Hypothesis Testing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"confidence\",\n          children: \"Confidence Intervals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sampling\",\n          children: \"Sampling Methods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), renderChart(selectedCategory)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s(InferentialStatisticsVisualiser, \"zF30t37FGMz2xeZX9KHWX1FfnMg=\");\n_c = InferentialStatisticsVisualiser;\nexport default InferentialStatisticsVisualiser;\nvar _c;\n$RefreshReg$(_c, \"InferentialStatisticsVisualiser\");","map":{"version":3,"names":["React","useState","Line","Bar","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","InferentialStatisticsVisualiser","data","columnHeaders","_s","selectedCategory","setSelectedCategory","options","responsive","maintainAspectRatio","scales","x","type","title","display","text","y","plugins","legend","position","tooltip","mode","intersect","chartData","zTest","labels","datasets","label","map","item","borderColor","tension","fill","tTest","backgroundColor","chiSquare","anova","_item$","confidence","randomSampling","_","index","_item$2","stratified","_item$3","_item$4","clusterSampling","_item$5","renderChart","charts","hypothesis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","sampling","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/durga/Downloads/stat-anv/stat/src/components/InferentialStatistics.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Line, Bar, Scatter } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst InferentialStatisticsVisualiser = ({ data, columnHeaders }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState('hypothesis');\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: { type: 'category', title: { display: true, text: 'Categories' } },\r\n      y: { type: 'linear', title: { display: true, text: 'Values' } },\r\n    },\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      tooltip: { mode: 'index', intersect: false },\r\n    },\r\n  };\r\n\r\n  const chartData = {\r\n    zTest: {\r\n      labels: columnHeaders || ['No Data'],\r\n      datasets: [{\r\n        label: 'Z-Distribution',\r\n        data: data.map(item => item[5]),\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        tension: 0.4,\r\n        fill: false,\r\n      }],\r\n    },\r\n    tTest: {\r\n      labels: columnHeaders || ['No Data'],\r\n      datasets: [{\r\n        label: 'Sample Distribution',\r\n        data: data.map(item => item[2]),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n      }],\r\n    },\r\n    chiSquare: {\r\n      labels: columnHeaders || ['No Data'],\r\n      datasets: [\r\n        {\r\n          label: 'Observed',\r\n          data: data.map(item => item[3]),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        },\r\n        {\r\n          label: 'Expected',\r\n          data: data.map(item => item[4]),\r\n          backgroundColor: 'rgba(153, 102, 255, 0.5)',\r\n        },\r\n      ],\r\n    },\r\n    anova: {\r\n      labels: columnHeaders || ['No Data'],\r\n      datasets: [{\r\n        label: 'ANOVA',\r\n        data: data.map(item => item[9] ?? 0),\r\n        backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n      }],\r\n    },\r\n    confidence: {\r\n      labels: columnHeaders || ['No Data'],\r\n      datasets: [\r\n        {\r\n          label: 'Mean',\r\n          data: data.map(item => item[5]),\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n          type: 'line',\r\n        },\r\n        {\r\n          label: 'Lower Bound',\r\n          data: data.map(item => item[5] - 10),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.1)',\r\n          borderColor: 'rgba(75, 192, 192, 0.1)',\r\n          type: 'line',\r\n        },\r\n        {\r\n          label: 'Upper Bound',\r\n          data: data.map(item => item[5] + 10),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.1)',\r\n          borderColor: 'rgba(75, 192, 192, 0.1)',\r\n          type: 'line',\r\n        },\r\n      ],\r\n    },\r\n    randomSampling: {\r\n      labels: data.map((_, index) => `Sample ${index + 1}`),\r\n      datasets: [{\r\n        label: 'Random Samples',\r\n        data: data.map((item, index) => ({ x: index + 1, y: item[6] ?? 0 })),\r\n        backgroundColor: 'rgb(75, 192, 192)',\r\n      }],\r\n    },\r\n    stratified: {\r\n      labels: columnHeaders || ['No Data'],\r\n      datasets: [\r\n        {\r\n          label: 'Stratum Size',\r\n          data: data.map(item => item[7] ?? 0),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        },\r\n        {\r\n          label: 'Sample Size',\r\n          data: data.map(item => item[8] ?? 0),\r\n          backgroundColor: 'rgba(153, 102, 255, 0.5)',\r\n        },\r\n      ],\r\n    },\r\n    clusterSampling: {\r\n      labels: data.map((_, index) => `Cluster ${index + 1}`),\r\n      datasets: [{\r\n        label: 'Cluster Samples',\r\n        data: data.map(item => item[10] ?? 0),\r\n        backgroundColor: 'rgb(255, 159, 64)',\r\n      }],\r\n    },\r\n  };\r\n\r\n  const renderChart = (type) => {\r\n    const charts = {\r\n      hypothesis: (\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Z-Test Distribution</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Line data={chartData.zTest} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">T-Test Comparison</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.tTest} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Chi-Square Test</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.chiSquare} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">ANOVA</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.anova} options={options} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      confidence: (\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Confidence Intervals</h2>\r\n          <div style={{ height: '300px' }}>\r\n            <Line data={chartData.confidence} options={options} />\r\n          </div>\r\n        </div>\r\n      ),\r\n      sampling: (\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Random Sampling Distribution</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Scatter data={chartData.randomSampling} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Stratified Sampling</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.stratified} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Cluster Sampling</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.clusterSampling} options={{\r\n                ...options,\r\n                scales: {\r\n                  x: { type: 'category', title: { display: true, text: 'Clusters' } },\r\n                  y: { type: 'linear', title: { display: true, text: 'Samples' } },\r\n                },\r\n              }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    };\r\n    return charts[type] || null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 space-y-6\">\r\n      <div className=\"text-center space-y-4\">\r\n        <h1 className=\"text-2xl font-bold\">Inferential Statistics Visualization</h1>\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"px-4 py-2 border rounded-md\"\r\n        >\r\n          <option value=\"hypothesis\">Hypothesis Testing</option>\r\n          <option value=\"confidence\">Confidence Intervals</option>\r\n          <option value=\"sampling\">Sampling Methods</option>\r\n        </select>\r\n      </div>\r\n      {renderChart(selectedCategory)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InferentialStatisticsVisualiser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}