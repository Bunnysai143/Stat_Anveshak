{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai kiran\\\\Desktop\\\\INternship\\\\Stat\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FileUploader from \"./components/FileUploader\";\nimport RawDataTable from \"./components/RawDataTable\";\nimport CoreStatistics from \"./components/CoreStatistics\";\nimport ChartGenerator from \"./components/ChartGenerator\"; // Updated for chart generation\nimport DistributionAnalysis from \"./components/DistributionAnalysis\"; // New component for distribution\nimport \"./styles/App.css\";\nimport InferentialStatistics from \"./components/InferentialStatistics\";\nimport TimeSeriesAnalysis from \"./components/TimeSeriesAnalysis\";\nimport RegressionAndCorrelation from \"./components/RegCore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [columnHeaders, setColumnHeaders] = useState([]);\n  const [selectedComponent, setSelectedComponent] = useState(\"\");\n  const [selectedColumn, setSelectedColumn] = useState(null); // Manage selected column for CoreStatistics\n\n  const handleFileUpload = (data, columnHeaders) => {\n    setData(data);\n    setColumnHeaders(columnHeaders);\n    setSelectedComponent(\"RawDataTable\"); // Automatically show Raw Data Table after file upload\n  };\n\n  // Function to handle column selection for CoreStatistics\n  const onColumnSelect = selected => {\n    setSelectedColumn(selected); // Update the selected column state\n  };\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {/* File Uploader at the very start */}\n    //   {data.length === 0 && (\n    //     <div className=\"file-uploader-section\">\n    //       <h1>Welcome To Stat Anveshak! Please Upload Your File</h1>\n    //       <FileUploader onFileUpload={handleFileUpload} />\n    //     </div>\n    //   )}\n    //   {/* Show the rest of the app only after file is uploaded */}\n    //   {data.length > 0 && (\n    //     <>\n    //       {/* Navbar */}\n    //       <nav className=\"navbar\">\n    //         <div className=\"navbar-container\">\n    //           <div className=\"navbar-links\">\n    //             <button\n    //               className=\"navbar-button\"\n    //               onClick={() => setSelectedComponent(\"RawDataTable\")}\n    //             >\n    //               Raw Data Table\n    //             </button>\n    //             <button\n    //               className=\"navbar-button\"\n    //               onClick={() => setSelectedComponent(\"CoreStatistics\")}\n    //             >\n    //               Core Statistics\n    //             </button>\n    //             <button\n    //               className=\"navbar-button\"\n    //               onClick={() => setSelectedComponent(\"ChartGenerator\")}\n    //             >\n    //               Chart Generator\n    //             </button>\n    //             <button\n    //               className=\"navbar-button\"\n    //               onClick={() => setSelectedComponent(\"DistributionAnalysis\")} // New button for distribution\n    //             >\n    //               Distribution Analysis\n    //             </button>\n    //             <button\n    //               className=\"navbar-button\"\n    //               onClick={() => setSelectedComponent(\"InferentialStatistics\")}\n    //             >\n    //               Inferential Statistics\n    //             </button>\n    //             <button\n    //               className=\"navbar-button\"\n    //               onClick={() => setSelectedComponent(\"TimeSeriesAnalysis\")}\n    //             >\n    //               Time Series Analysis\n    //             </button>\n    //           </div>\n    //         </div>\n    //       </nav>\n    //       {/* Main Content */}\n    //       <div className=\"main-content\">\n    //         {/* Raw Data Table */}\n    //         {selectedComponent === \"RawDataTable\" && (\n    //           <RawDataTable data={data} columnHeaders={columnHeaders} setData={setData} />\n    //         )}\n    //         {/* Core Statistics */}\n    //         {selectedComponent === \"CoreStatistics\" && (\n    //           <CoreStatistics\n    //             data={data}\n    //             columnHeaders={columnHeaders}\n    //             selectedColumn={selectedColumn}\n    //             onColumnSelect={onColumnSelect} // Pass down onColumnSelect to handle column change\n    //           />\n    //         )}\n    //         {/* Chart Generator */}\n    //         {selectedComponent === \"ChartGenerator\" && (\n    //           <ChartGenerator data={data} columnHeaders={columnHeaders} />\n    //         )}\n    //         {/* Distribution Analysis */}\n    //         {selectedComponent === \"DistributionAnalysis\" && (\n    //           <DistributionAnalysis data={data} columnHeaders={columnHeaders} />\n    //         )}\n    //         {/* Inferential Statistics */}\n    //         {selectedComponent === \"InferentialStatistics\" && (\n    //           <InferentialStatistics data={data} columnHeaders={columnHeaders} />\n    //         )}\n    //         {/* Time Series Analysis */}\n    //         {selectedComponent === \"TimeSeriesAnalysis\" && (\n    //           <TimeSeriesAnalysis data={data} columnHeaders={columnHeaders} />\n    //         )}\n    //       </div>\n    //     </>\n    //   )}\n    // </div>\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(RegressionAndCorrelation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(App, \"pDyzFRHWaB9AsaOY3iE879RLMZo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","FileUploader","RawDataTable","CoreStatistics","ChartGenerator","DistributionAnalysis","InferentialStatistics","TimeSeriesAnalysis","RegressionAndCorrelation","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","data","setData","columnHeaders","setColumnHeaders","selectedComponent","setSelectedComponent","selectedColumn","setSelectedColumn","handleFileUpload","onColumnSelect","selected","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Sai kiran/Desktop/INternship/Stat/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FileUploader from \"./components/FileUploader\";\r\nimport RawDataTable from \"./components/RawDataTable\";\r\nimport CoreStatistics from \"./components/CoreStatistics\";\r\nimport ChartGenerator from \"./components/ChartGenerator\"; // Updated for chart generation\r\nimport DistributionAnalysis from \"./components/DistributionAnalysis\"; // New component for distribution\r\nimport \"./styles/App.css\";\r\nimport InferentialStatistics from \"./components/InferentialStatistics\";\r\nimport TimeSeriesAnalysis from \"./components/TimeSeriesAnalysis\";\r\nimport RegressionAndCorrelation from \"./components/RegCore\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [columnHeaders, setColumnHeaders] = useState([]);\r\n  const [selectedComponent, setSelectedComponent] = useState(\"\");\r\n  const [selectedColumn, setSelectedColumn] = useState(null); // Manage selected column for CoreStatistics\r\n\r\n  const handleFileUpload = (data, columnHeaders) => {\r\n    setData(data);\r\n    setColumnHeaders(columnHeaders);\r\n    setSelectedComponent(\"RawDataTable\"); // Automatically show Raw Data Table after file upload\r\n  };\r\n\r\n  // Function to handle column selection for CoreStatistics\r\n  const onColumnSelect = (selected) => {\r\n    setSelectedColumn(selected); // Update the selected column state\r\n  };\r\n\r\n  return (\r\n    // <div>\r\n    //   {/* File Uploader at the very start */}\r\n    //   {data.length === 0 && (\r\n    //     <div className=\"file-uploader-section\">\r\n    //       <h1>Welcome To Stat Anveshak! Please Upload Your File</h1>\r\n    //       <FileUploader onFileUpload={handleFileUpload} />\r\n    //     </div>\r\n    //   )}\r\n\r\n    //   {/* Show the rest of the app only after file is uploaded */}\r\n    //   {data.length > 0 && (\r\n    //     <>\r\n    //       {/* Navbar */}\r\n    //       <nav className=\"navbar\">\r\n    //         <div className=\"navbar-container\">\r\n    //           <div className=\"navbar-links\">\r\n    //             <button\r\n    //               className=\"navbar-button\"\r\n    //               onClick={() => setSelectedComponent(\"RawDataTable\")}\r\n    //             >\r\n    //               Raw Data Table\r\n    //             </button>\r\n    //             <button\r\n    //               className=\"navbar-button\"\r\n    //               onClick={() => setSelectedComponent(\"CoreStatistics\")}\r\n    //             >\r\n    //               Core Statistics\r\n    //             </button>\r\n    //             <button\r\n    //               className=\"navbar-button\"\r\n    //               onClick={() => setSelectedComponent(\"ChartGenerator\")}\r\n    //             >\r\n    //               Chart Generator\r\n    //             </button>\r\n    //             <button\r\n    //               className=\"navbar-button\"\r\n    //               onClick={() => setSelectedComponent(\"DistributionAnalysis\")} // New button for distribution\r\n    //             >\r\n    //               Distribution Analysis\r\n    //             </button>\r\n    //             <button\r\n    //               className=\"navbar-button\"\r\n    //               onClick={() => setSelectedComponent(\"InferentialStatistics\")}\r\n    //             >\r\n    //               Inferential Statistics\r\n    //             </button>\r\n    //             <button\r\n    //               className=\"navbar-button\"\r\n    //               onClick={() => setSelectedComponent(\"TimeSeriesAnalysis\")}\r\n    //             >\r\n    //               Time Series Analysis\r\n    //             </button>\r\n    //           </div>\r\n    //         </div>\r\n    //       </nav>\r\n\r\n    //       {/* Main Content */}\r\n    //       <div className=\"main-content\">\r\n    //         {/* Raw Data Table */}\r\n    //         {selectedComponent === \"RawDataTable\" && (\r\n    //           <RawDataTable data={data} columnHeaders={columnHeaders} setData={setData} />\r\n    //         )}\r\n\r\n    //         {/* Core Statistics */}\r\n    //         {selectedComponent === \"CoreStatistics\" && (\r\n    //           <CoreStatistics\r\n    //             data={data}\r\n    //             columnHeaders={columnHeaders}\r\n    //             selectedColumn={selectedColumn}\r\n    //             onColumnSelect={onColumnSelect} // Pass down onColumnSelect to handle column change\r\n    //           />\r\n    //         )}\r\n\r\n    //         {/* Chart Generator */}\r\n    //         {selectedComponent === \"ChartGenerator\" && (\r\n    //           <ChartGenerator data={data} columnHeaders={columnHeaders} />\r\n    //         )}\r\n\r\n    //         {/* Distribution Analysis */}\r\n    //         {selectedComponent === \"DistributionAnalysis\" && (\r\n    //           <DistributionAnalysis data={data} columnHeaders={columnHeaders} />\r\n    //         )}\r\n\r\n    //         {/* Inferential Statistics */}\r\n    //         {selectedComponent === \"InferentialStatistics\" && (\r\n    //           <InferentialStatistics data={data} columnHeaders={columnHeaders} />\r\n    //         )}\r\n\r\n    //         {/* Time Series Analysis */}\r\n    //         {selectedComponent === \"TimeSeriesAnalysis\" && (\r\n    //           <TimeSeriesAnalysis data={data} columnHeaders={columnHeaders} />\r\n    //         )}\r\n    //       </div>\r\n    //     </>\r\n    //   )}\r\n    // </div>\r\n    <>\r\n    <RegressionAndCorrelation/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,cAAc,MAAM,6BAA6B,CAAC,CAAC;AAC1D,OAAOC,oBAAoB,MAAM,mCAAmC,CAAC,CAAC;AACtE,OAAO,kBAAkB;AACzB,OAAOC,qBAAqB,MAAM,oCAAoC;AACtE,OAAOC,kBAAkB,MAAM,iCAAiC;AAChE,OAAOC,wBAAwB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE5D,MAAMuB,gBAAgB,GAAGA,CAACR,IAAI,EAAEE,aAAa,KAAK;IAChDD,OAAO,CAACD,IAAI,CAAC;IACbG,gBAAgB,CAACD,aAAa,CAAC;IAC/BG,oBAAoB,CAAC,cAAc,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMI,cAAc,GAAIC,QAAQ,IAAK;IACnCH,iBAAiB,CAACG,QAAQ,CAAC,CAAC,CAAC;EAC/B,CAAC;EAED;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAf,OAAA,CAAAE,SAAA;MAAAc,QAAA,eACAhB,OAAA,CAACF,wBAAwB;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC,gBACzB;EAAC;AAEP;AAAChB,EAAA,CAtHQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAwHZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}