{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai kiran\\\\Desktop\\\\INternship\\\\Stat\\\\src\\\\components\\\\InferentialStatistics.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line, Bar, Scatter } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, BarElement, Title, Tooltip, Legend);\nconst InferentialStatisticsVisualiser = ({\n  data,\n  columnHeaders\n}) => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('hypothesis');\n  const [xAxisColumn, setXAxisColumn] = useState((columnHeaders === null || columnHeaders === void 0 ? void 0 : columnHeaders[0]) || '');\n  const [indexx, setIndex] = useState(1);\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    scales: {\n      x: {\n        type: 'category',\n        title: {\n          display: true,\n          text: 'Categories'\n        }\n      },\n      y: {\n        type: 'linear',\n        title: {\n          display: true,\n          text: 'Values'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      tooltip: {\n        mode: 'index',\n        intersect: false\n      }\n    }\n  };\n  useEffect(() => {\n    let a = columnHeaders.findIndex(element => element === xAxisColumn);\n    setIndex(a);\n    console.log(indexx);\n  });\n  const getXValues = () => {\n    const columnIndex = columnHeaders.indexOf(xAxisColumn);\n    if (columnIndex === -1) {\n      return data.map((_, index) => `Index ${index + 1}`); // Fallback labels\n    }\n    return data.map(row => {\n      const value = row[columnIndex];\n      return value !== undefined && value !== null ? value : 'No Data'; // Handle missing values\n    });\n  };\n  let a = data.map(item => item[5] + 10);\n  console.log(a);\n  console.log(\"X Axis Labels:\", getXValues());\n  const chartData = {\n    zTest: {\n      labels: getXValues(),\n      datasets: [{\n        label: 'Z-Distribution',\n        data: data.map(item => item[5]),\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.4,\n        fill: false\n      }]\n    },\n    tTest: {\n      labels: getXValues(),\n      datasets: [{\n        label: 'Sample Distribution',\n        data: data.map(item => item[2]),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }]\n    },\n    chiSquare: {\n      labels: getXValues(),\n      datasets: [{\n        label: 'Observed',\n        data: data.map(item => item[3]),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Expected',\n        data: data.map(item => item[4]),\n        backgroundColor: 'rgba(153, 102, 255, 0.5)'\n      }]\n    },\n    anova: {\n      labels: getXValues(),\n      datasets: [{\n        label: 'ANOVA',\n        data: data.map(item => {\n          const value = item[2]; // Ensure this index matches your data structure\n          return value !== undefined && !isNaN(value) ? value : null;\n        }).filter(value => value !== null),\n        // Exclude invalid values\n        backgroundColor: 'rgba(255, 99, 132, 0.5)'\n      }]\n    },\n    confidence: {\n      labels: getXValues(),\n      datasets: [{\n        label: 'Mean',\n        data: data.map(item => item[5]),\n        borderColor: 'rgb(75, 192, 192)',\n        backgroundColor: 'rgba(75, 192, 192, 0.5)',\n        type: 'line'\n      }, {\n        label: 'Lower Bound',\n        data: data.map(item => item[5] - 10),\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        borderColor: 'rgba(75, 192, 192, 0.1)',\n        type: 'line'\n      }, {\n        label: 'Upper Bound',\n        data: data.map(item => item[5] + 10),\n        backgroundColor: 'rgba(75, 192, 192, 0.1)',\n        borderColor: 'rgba(75, 192, 192, 0.1)',\n        type: 'line'\n      }]\n    },\n    randomSampling: {\n      labels: data.map((_, index) => `Sample ${index + 1}`),\n      datasets: [{\n        label: 'Random Samples',\n        data: data.map((item, index) => ({\n          x: index + 1,\n          y: item[5] || 0\n        })),\n        backgroundColor: 'rgb(75, 192, 192)'\n      }]\n    },\n    stratified: {\n      labels: getXValues(),\n      datasets: [{\n        label: 'Stratum Size',\n        data: data.map(item => item[7] || 0),\n        backgroundColor: 'rgba(75, 192, 192, 0.5)'\n      }, {\n        label: 'Sample Size',\n        data: data.map(item => item[indexx] || 0),\n        backgroundColor: 'rgba(153, 102, 255, 0.5)'\n      }]\n    },\n    clusterSampling: {\n      labels: data.map((_, index) => `Cluster ${index + 1}`),\n      datasets: [{\n        label: 'Cluster Samples',\n        data: data.map(item => item[indexx] || 0),\n        backgroundColor: 'rgb(255, 159, 64)'\n      }]\n    }\n  };\n  const renderChart = type => {\n    const charts = {\n      hypothesis: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Z-Test Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Line, {\n              data: chartData.zTest,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"T-Test Comparison\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.tTest,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Chi-Square Test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.chiSquare,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"ANOVA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.anova,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this),\n      confidence: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold mb-4\",\n          children: \"Confidence Intervals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '300px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Line, {\n            data: chartData.confidence,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this),\n      sampling: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Random Sampling Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Scatter, {\n              data: chartData.randomSampling,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Stratified Sampling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.stratified,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-6 rounded-lg shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold mb-4\",\n            children: \"Cluster Sampling\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '300px'\n            },\n            children: /*#__PURE__*/_jsxDEV(Bar, {\n              data: chartData.clusterSampling,\n              options: options\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)\n    };\n    return charts[type] || null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Inferential Statistics Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: xAxisColumn,\n        onChange: e => setXAxisColumn(e.target.value),\n        className: \"px-4 py-2 border rounded-md\",\n        children: columnHeaders === null || columnHeaders === void 0 ? void 0 : columnHeaders.map((header, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: header,\n          children: header\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedCategory,\n        onChange: e => setSelectedCategory(e.target.value),\n        className: \"px-4 py-2 border rounded-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hypothesis\",\n          children: \"Hypothesis Testing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"confidence\",\n          children: \"Confidence Intervals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sampling\",\n          children: \"Sampling Methods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), renderChart(selectedCategory)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n};\n_s(InferentialStatisticsVisualiser, \"t5rd43j9uTbAuDyBNnQJZ83clCg=\");\n_c = InferentialStatisticsVisualiser;\nexport default InferentialStatisticsVisualiser;\nvar _c;\n$RefreshReg$(_c, \"InferentialStatisticsVisualiser\");","map":{"version":3,"names":["React","useEffect","useState","Line","Bar","Scatter","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","InferentialStatisticsVisualiser","data","columnHeaders","_s","selectedCategory","setSelectedCategory","xAxisColumn","setXAxisColumn","indexx","setIndex","options","responsive","maintainAspectRatio","scales","x","type","title","display","text","y","plugins","legend","position","tooltip","mode","intersect","a","findIndex","element","console","log","getXValues","columnIndex","indexOf","map","_","index","row","value","undefined","item","chartData","zTest","labels","datasets","label","borderColor","tension","fill","tTest","backgroundColor","chiSquare","anova","isNaN","filter","confidence","randomSampling","stratified","clusterSampling","renderChart","charts","hypothesis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","sampling","onChange","e","target","header","_c","$RefreshReg$"],"sources":["C:/Users/Sai kiran/Desktop/INternship/Stat/src/components/InferentialStatistics.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line, Bar, Scatter } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst InferentialStatisticsVisualiser = ({ data, columnHeaders }) => {\r\n  const [selectedCategory, setSelectedCategory] = useState('hypothesis');\r\n  const [xAxisColumn, setXAxisColumn] = useState(columnHeaders?.[0] || '');\r\n  const [indexx,setIndex] = useState(1);\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    scales: {\r\n      x: { type: 'category', title: { display: true, text: 'Categories' } },\r\n      y: { type: 'linear', title: { display: true, text: 'Values' } },\r\n    },\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      tooltip: { mode: 'index', intersect: false },\r\n    },\r\n  };\r\n\r\n  useEffect(()=>{\r\n   let a= columnHeaders.findIndex((element) => element === xAxisColumn);\r\n   setIndex(a);\r\n   console.log(indexx);\r\n  })\r\n\r\n  const getXValues = () => {\r\n    const columnIndex = columnHeaders.indexOf(xAxisColumn);\r\n  \r\n    if (columnIndex === -1) {\r\n      return data.map((_, index) => `Index ${index + 1}`); // Fallback labels\r\n    }\r\n  \r\n    return data.map((row) => {\r\n      const value = row[columnIndex];\r\n      return value !== undefined && value !== null ? value : 'No Data'; // Handle missing values\r\n    });\r\n  };\r\n  \r\n  let a= data.map((item) => item[5] + 10);\r\n  console.log(a);\r\n  console.log(\"X Axis Labels:\", getXValues());\r\n  \r\n\r\n  const chartData = {\r\n    zTest: {\r\n      labels: getXValues(),\r\n      datasets: [\r\n        {\r\n          label: 'Z-Distribution',\r\n          data: data.map((item) => item[5]),\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          tension: 0.4,\r\n          fill: false,\r\n        },\r\n      ],\r\n    },\r\n    tTest: {\r\n      labels: getXValues(),\r\n      datasets: [\r\n        {\r\n          label: 'Sample Distribution',\r\n          data: data.map((item) => item[2]),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        },\r\n      ],\r\n    },\r\n    chiSquare: {\r\n      labels: getXValues(),\r\n      datasets: [\r\n        {\r\n          label: 'Observed',\r\n          data: data.map((item) => item[3]),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        },\r\n        {\r\n          label: 'Expected',\r\n          data: data.map((item) => item[4]),\r\n          backgroundColor: 'rgba(153, 102, 255, 0.5)',\r\n        },\r\n      ],\r\n    },\r\n    anova: {\r\n      labels: getXValues(),\r\n      datasets: [\r\n        {\r\n          label: 'ANOVA',\r\n          data: data.map((item) => {\r\n            const value = item[2]; // Ensure this index matches your data structure\r\n            return value !== undefined && !isNaN(value) ? value : null;\r\n          }).filter((value) => value !== null), // Exclude invalid values\r\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n        },\r\n      ],\r\n    },\r\n    \r\n    \r\n    confidence: {\r\n      labels: getXValues(),\r\n      datasets: [\r\n        {\r\n          label: 'Mean',\r\n          data: data.map((item) => item[5]),\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n          type: 'line',\r\n        },\r\n        {\r\n          label: 'Lower Bound',\r\n          data: data.map((item) => item[5] - 10),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.1)',\r\n          borderColor: 'rgba(75, 192, 192, 0.1)',\r\n          type: 'line',\r\n        },\r\n        {\r\n          label: 'Upper Bound',\r\n          data: data.map((item) => item[5] + 10),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.1)',\r\n          borderColor: 'rgba(75, 192, 192, 0.1)',\r\n          type: 'line',\r\n        },\r\n      ],\r\n    },\r\n    randomSampling: {\r\n      labels: data.map((_, index) => `Sample ${index + 1}`),\r\n      datasets: [\r\n        {\r\n          label: 'Random Samples',\r\n          data: data.map((item, index) => ({ x: index + 1, y: item[5] || 0 })),\r\n          backgroundColor: 'rgb(75, 192, 192)',\r\n        },\r\n      ],\r\n    },\r\n    stratified: {\r\n      labels: getXValues(),\r\n      datasets: [\r\n        {\r\n          label: 'Stratum Size',\r\n          data: data.map((item) => item[7] || 0),\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)',\r\n        },\r\n        {\r\n          label: 'Sample Size',\r\n          data: data.map((item) => item[indexx] || 0),\r\n          backgroundColor: 'rgba(153, 102, 255, 0.5)',\r\n        },\r\n      ],\r\n    },\r\n    clusterSampling: {\r\n      labels: data.map((_, index) => `Cluster ${index + 1}`),\r\n      datasets: [\r\n        {\r\n          label: 'Cluster Samples',\r\n          data: data.map((item) => item[indexx] || 0),\r\n          backgroundColor: 'rgb(255, 159, 64)',\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const renderChart = (type) => {\r\n    const charts = {\r\n      hypothesis: (\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Z-Test Distribution</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Line data={chartData.zTest} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">T-Test Comparison</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.tTest} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Chi-Square Test</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.chiSquare} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">ANOVA</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.anova} options={options} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n      confidence: (\r\n        <div className=\"bg-white p-6 rounded-lg shadow\">\r\n          <h2 className=\"text-xl font-bold mb-4\">Confidence Intervals</h2>\r\n          <div style={{ height: '300px' }}>\r\n            <Line data={chartData.confidence} options={options} />\r\n          </div>\r\n        </div>\r\n      ),\r\n      sampling: (\r\n        <div className=\"space-y-6\">\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Random Sampling Distribution</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Scatter data={chartData.randomSampling} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Stratified Sampling</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.stratified} options={options} />\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-white p-6 rounded-lg shadow\">\r\n            <h2 className=\"text-xl font-bold mb-4\">Cluster Sampling</h2>\r\n            <div style={{ height: '300px' }}>\r\n              <Bar data={chartData.clusterSampling} options={options} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ),\r\n    };\r\n    return charts[type] || null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6 space-y-6\">\r\n      <div className=\"text-center space-y-4\">\r\n        <h1 className=\"text-2xl font-bold\">Inferential Statistics Visualization</h1>\r\n        <select\r\n          value={xAxisColumn}\r\n          onChange={(e) => setXAxisColumn(e.target.value)}\r\n          className=\"px-4 py-2 border rounded-md\"\r\n        >\r\n          {columnHeaders?.map((header, index) => (\r\n            \r\n            <option key={index} value={header}> \r\n              {header}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <select\r\n          value={selectedCategory}\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"px-4 py-2 border rounded-md\"\r\n        >\r\n          <option value=\"hypothesis\">Hypothesis Testing</option>\r\n          <option value=\"confidence\">Confidence Intervals</option>\r\n          <option value=\"sampling\">Sampling Methods</option>\r\n        </select>\r\n      </div>\r\n      {renderChart(selectedCategory)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InferentialStatisticsVisualiser;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}