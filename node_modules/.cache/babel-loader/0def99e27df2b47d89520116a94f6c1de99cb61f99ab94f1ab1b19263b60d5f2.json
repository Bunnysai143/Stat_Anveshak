{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai kiran\\\\Desktop\\\\INternship\\\\Stat\\\\src\\\\components\\\\RawDataTable.js\";\nimport React from \"react\";\nimport \"../styles/R\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RawDataTable = ({\n  data,\n  columnHeaders,\n  setData\n}) => {\n  // Handle cell edits to update the data\n  const handleCellEdit = (rowIndex, colIndex, value) => {\n    const updatedData = [...data];\n    updatedData[rowIndex][colIndex] = value;\n    setData(updatedData); // Update the data state\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"striped responsive-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: columnHeaders.map((header, colIndex) => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n          contentEditable: true,\n          onBlur: e => handleCellEdit(rowIndex, colIndex, e.target.innerText),\n          children: cell\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = RawDataTable;\nexport default RawDataTable;\nvar _c;\n$RefreshReg$(_c, \"RawDataTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","RawDataTable","data","columnHeaders","setData","handleCellEdit","rowIndex","colIndex","value","updatedData","className","children","map","header","fileName","_jsxFileName","lineNumber","columnNumber","row","cell","contentEditable","onBlur","e","target","innerText","_c","$RefreshReg$"],"sources":["C:/Users/Sai kiran/Desktop/INternship/Stat/src/components/RawDataTable.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../styles/R\"\r\nconst RawDataTable = ({ data, columnHeaders, setData }) => {\r\n  // Handle cell edits to update the data\r\n  const handleCellEdit = (rowIndex, colIndex, value) => {\r\n    const updatedData = [...data];\r\n    updatedData[rowIndex][colIndex] = value;\r\n    setData(updatedData);  // Update the data state\r\n  };\r\n\r\n  return (\r\n    <table className=\"striped responsive-table\">\r\n      <thead>\r\n        <tr>\r\n          {columnHeaders.map((header, colIndex) => (\r\n            <th key={colIndex}>{header}</th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {data.map((row, rowIndex) => (\r\n          <tr key={rowIndex}>\r\n            {row.map((cell, colIndex) => (\r\n              <td\r\n                key={colIndex}\r\n                contentEditable\r\n                onBlur={(e) => handleCellEdit(rowIndex, colIndex, e.target.innerText)}\r\n              >\r\n                {cell}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default RawDataTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACpB,MAAMC,YAAY,GAAGA,CAAC;EAAEC,IAAI;EAAEC,aAAa;EAAEC;AAAQ,CAAC,KAAK;EACzD;EACA,MAAMC,cAAc,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK,KAAK;IACpD,MAAMC,WAAW,GAAG,CAAC,GAAGP,IAAI,CAAC;IAC7BO,WAAW,CAACH,QAAQ,CAAC,CAACC,QAAQ,CAAC,GAAGC,KAAK;IACvCJ,OAAO,CAACK,WAAW,CAAC,CAAC,CAAE;EACzB,CAAC;EAED,oBACET,OAAA;IAAOU,SAAS,EAAC,0BAA0B;IAAAC,QAAA,gBACzCX,OAAA;MAAAW,QAAA,eACEX,OAAA;QAAAW,QAAA,EACGR,aAAa,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEN,QAAQ,kBAClCP,OAAA;UAAAW,QAAA,EAAoBE;QAAM,GAAjBN,QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACRjB,OAAA;MAAAW,QAAA,EACGT,IAAI,CAACU,GAAG,CAAC,CAACM,GAAG,EAAEZ,QAAQ,kBACtBN,OAAA;QAAAW,QAAA,EACGO,GAAG,CAACN,GAAG,CAAC,CAACO,IAAI,EAAEZ,QAAQ,kBACtBP,OAAA;UAEEoB,eAAe;UACfC,MAAM,EAAGC,CAAC,IAAKjB,cAAc,CAACC,QAAQ,EAAEC,QAAQ,EAAEe,CAAC,CAACC,MAAM,CAACC,SAAS,CAAE;UAAAb,QAAA,EAErEQ;QAAI,GAJAZ,QAAQ;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKX,CACL;MAAC,GATKX,QAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAACQ,EAAA,GAlCIxB,YAAY;AAoClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}