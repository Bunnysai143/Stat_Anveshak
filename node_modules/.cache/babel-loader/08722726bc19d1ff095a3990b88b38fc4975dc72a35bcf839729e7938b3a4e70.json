{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar isInteger = require('@stdlib/math-base-assert-is-integer');\nvar isnan = require('@stdlib/math-base-assert-is-nan');\nvar betaln = require('@stdlib/math-base-special-betaln');\nvar abs = require('@stdlib/math-base-special-abs');\nvar ln = require('@stdlib/math-base-special-ln');\nvar NINF = require('@stdlib/constants-float64-ninf');\n\n// MAIN //\n\n/**\n* Computes the natural logarithm of the binomial coefficient of two integers.\n*\n* @param {integer} n - input value\n* @param {integer} k - second input value\n* @returns {number} function value\n*\n* @example\n* var v = binomcoefln( 8, 2 );\n* // returns ~3.332\n*\n* @example\n* var v = binomcoefln( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = binomcoefln( -4, 2 );\n* // returns ~2.303\n*\n* @example\n* var v = binomcoefln( 88, 3 );\n* // returns ~11.606\n*\n* @example\n* var v = binomcoefln( NaN, 3 );\n* // returns NaN\n*\n* @example\n* var v = binomcoefln( 5, NaN );\n* // returns NaN\n*\n* @example\n* var v = binomcoefln( NaN, NaN );\n* // returns NaN\n*/\nfunction binomcoefln(n, k) {\n  if (isnan(n) || isnan(k)) {\n    return NaN;\n  }\n  if (!isInteger(n) || !isInteger(k)) {\n    return NaN;\n  }\n  if (n < 0.0) {\n    return binomcoefln(-n + k - 1, k);\n  }\n  if (k < 0) {\n    return NINF;\n  }\n  if (k === 0) {\n    return 0.0;\n  }\n  if (k === 1) {\n    return ln(abs(n));\n  }\n  if (n < k) {\n    return NINF;\n  }\n  if (n - k < 2) {\n    return binomcoefln(n, n - k);\n  }\n  // Case: n - k >= 2\n  return -ln(n + 1) - betaln(n - k + 1, k + 1);\n}\n\n// EXPORTS //\n\nmodule.exports = binomcoefln;","map":{"version":3,"names":["isInteger","require","isnan","betaln","abs","ln","NINF","binomcoefln","n","k","NaN","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-binomcoefln/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isInteger = require( '@stdlib/math-base-assert-is-integer' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar betaln = require( '@stdlib/math-base-special-betaln' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\n\n\n// MAIN //\n\n/**\n* Computes the natural logarithm of the binomial coefficient of two integers.\n*\n* @param {integer} n - input value\n* @param {integer} k - second input value\n* @returns {number} function value\n*\n* @example\n* var v = binomcoefln( 8, 2 );\n* // returns ~3.332\n*\n* @example\n* var v = binomcoefln( 0, 0 );\n* // returns 0.0\n*\n* @example\n* var v = binomcoefln( -4, 2 );\n* // returns ~2.303\n*\n* @example\n* var v = binomcoefln( 88, 3 );\n* // returns ~11.606\n*\n* @example\n* var v = binomcoefln( NaN, 3 );\n* // returns NaN\n*\n* @example\n* var v = binomcoefln( 5, NaN );\n* // returns NaN\n*\n* @example\n* var v = binomcoefln( NaN, NaN );\n* // returns NaN\n*/\nfunction binomcoefln( n, k ) {\n\tif ( isnan( n ) || isnan( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( !isInteger( n ) || !isInteger( k ) ) {\n\t\treturn NaN;\n\t}\n\tif ( n < 0.0 ) {\n\t\treturn binomcoefln( -n + k - 1, k );\n\t}\n\tif ( k < 0 ) {\n\t\treturn NINF;\n\t}\n\tif ( k === 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( k === 1 ) {\n\t\treturn ln( abs( n ) );\n\t}\n\tif ( n < k ) {\n\t\treturn NINF;\n\t}\n\tif ( n - k < 2 ) {\n\t\treturn binomcoefln( n, n - k );\n\t}\n\t// Case: n - k >= 2\n\treturn -ln( n + 1 ) - betaln( n - k + 1, k + 1 );\n}\n\n\n// EXPORTS //\n\nmodule.exports = binomcoefln;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAE,qCAAsC,CAAC;AAChE,IAAIC,KAAK,GAAGD,OAAO,CAAE,iCAAkC,CAAC;AACxD,IAAIE,MAAM,GAAGF,OAAO,CAAE,kCAAmC,CAAC;AAC1D,IAAIG,GAAG,GAAGH,OAAO,CAAE,+BAAgC,CAAC;AACpD,IAAII,EAAE,GAAGJ,OAAO,CAAE,8BAA+B,CAAC;AAClD,IAAIK,IAAI,GAAGL,OAAO,CAAE,gCAAiC,CAAC;;AAGtD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASM,WAAWA,CAAEC,CAAC,EAAEC,CAAC,EAAG;EAC5B,IAAKP,KAAK,CAAEM,CAAE,CAAC,IAAIN,KAAK,CAAEO,CAAE,CAAC,EAAG;IAC/B,OAAOC,GAAG;EACX;EACA,IAAK,CAACV,SAAS,CAAEQ,CAAE,CAAC,IAAI,CAACR,SAAS,CAAES,CAAE,CAAC,EAAG;IACzC,OAAOC,GAAG;EACX;EACA,IAAKF,CAAC,GAAG,GAAG,EAAG;IACd,OAAOD,WAAW,CAAE,CAACC,CAAC,GAAGC,CAAC,GAAG,CAAC,EAAEA,CAAE,CAAC;EACpC;EACA,IAAKA,CAAC,GAAG,CAAC,EAAG;IACZ,OAAOH,IAAI;EACZ;EACA,IAAKG,CAAC,KAAK,CAAC,EAAG;IACd,OAAO,GAAG;EACX;EACA,IAAKA,CAAC,KAAK,CAAC,EAAG;IACd,OAAOJ,EAAE,CAAED,GAAG,CAAEI,CAAE,CAAE,CAAC;EACtB;EACA,IAAKA,CAAC,GAAGC,CAAC,EAAG;IACZ,OAAOH,IAAI;EACZ;EACA,IAAKE,CAAC,GAAGC,CAAC,GAAG,CAAC,EAAG;IAChB,OAAOF,WAAW,CAAEC,CAAC,EAAEA,CAAC,GAAGC,CAAE,CAAC;EAC/B;EACA;EACA,OAAO,CAACJ,EAAE,CAAEG,CAAC,GAAG,CAAE,CAAC,GAAGL,MAAM,CAAEK,CAAC,GAAGC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAE,CAAC;AACjD;;AAGA;;AAEAE,MAAM,CAACC,OAAO,GAAGL,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}