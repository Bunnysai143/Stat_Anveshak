{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\nvar interpolate = require('@stdlib/string-base-format-interpolate');\nvar tokenize = require('@stdlib/string-base-format-tokenize');\nvar isString = require('./is_string.js');\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format(str) {\n  var args;\n  var i;\n  if (!isString(str)) {\n    throw new TypeError(format('invalid argument. First argument must be a string. Value: `%s`.', str));\n  }\n  args = [tokenize(str)];\n  for (i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n  return interpolate.apply(null, args);\n}\n\n// EXPORTS //\n\nmodule.exports = format;","map":{"version":3,"names":["interpolate","require","tokenize","isString","format","str","args","i","TypeError","arguments","length","push","apply","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/string-format/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar interpolate = require( '@stdlib/string-base-format-interpolate' );\nvar tokenize = require( '@stdlib/string-base-format-tokenize' );\nvar isString = require( './is_string.js' );\n\n\n// MAIN //\n\n/**\n* Inserts supplied variable values into a format string.\n*\n* @param {string} str - input string\n* @param {Array} ...args - variable values\n* @throws {TypeError} first argument must be a string\n* @throws {Error} invalid flags\n* @returns {string} formatted string\n*\n* @example\n* var str = format( 'Hello %s!', 'world' );\n* // returns 'Hello world!'\n*\n* @example\n* var str = format( 'Pi: ~%.2f', 3.141592653589793 );\n* // returns 'Pi: ~3.14'\n*/\nfunction format( str ) {\n\tvar args;\n\tvar i;\n\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( 'invalid argument. First argument must be a string. Value: `%s`.', str ) );\n\t}\n\targs = [ tokenize( str ) ];\n\tfor ( i = 1; i < arguments.length; i++ ) {\n\t\targs.push( arguments[ i ] );\n\t}\n\treturn interpolate.apply( null, args );\n}\n\n\n// EXPORTS //\n\nmodule.exports = format;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,IAAIA,WAAW,GAAGC,OAAO,CAAE,wCAAyC,CAAC;AACrE,IAAIC,QAAQ,GAAGD,OAAO,CAAE,qCAAsC,CAAC;AAC/D,IAAIE,QAAQ,GAAGF,OAAO,CAAE,gBAAiB,CAAC;;AAG1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,MAAMA,CAAEC,GAAG,EAAG;EACtB,IAAIC,IAAI;EACR,IAAIC,CAAC;EAEL,IAAK,CAACJ,QAAQ,CAAEE,GAAI,CAAC,EAAG;IACvB,MAAM,IAAIG,SAAS,CAAEJ,MAAM,CAAE,iEAAiE,EAAEC,GAAI,CAAE,CAAC;EACxG;EACAC,IAAI,GAAG,CAAEJ,QAAQ,CAAEG,GAAI,CAAC,CAAE;EAC1B,KAAME,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,SAAS,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAG;IACxCD,IAAI,CAACK,IAAI,CAAEF,SAAS,CAAEF,CAAC,CAAG,CAAC;EAC5B;EACA,OAAOP,WAAW,CAACY,KAAK,CAAE,IAAI,EAAEN,IAAK,CAAC;AACvC;;AAGA;;AAEAO,MAAM,CAACC,OAAO,GAAGV,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}