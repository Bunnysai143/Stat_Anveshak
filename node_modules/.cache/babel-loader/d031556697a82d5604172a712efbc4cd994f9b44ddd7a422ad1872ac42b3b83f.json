{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar round = require('@stdlib/math-base-special-round');\nvar getHighWord = require('@stdlib/number-float64-base-get-high-word');\n\n// VARIABLES //\n\n// 53 bits of 2/π:\nvar INVPIO2 = 6.36619772367581382433e-01; // 0x3FE45F30, 0x6DC9C883\n\n// First 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00; // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\n\n// Another 33 bits of π/2:\nvar PIO2_2 = 6.07710050630396597660e-11; // 0x3DD0B461, 0x1A600000\n\n// PIO2_2T = π/2 - ( PIO2_1 + PIO2_2 ):\nvar PIO2_2T = 2.02226624879595063154e-21; // 0x3BA3198A, 0x2E037073\n\n// Another 33 bits of π/2:\nvar PIO2_3 = 2.02226624871116645580e-21; // 0x3BA3198A, 0x2E000000\n\n// PIO2_3T = π/2 - ( PIO2_1 + PIO2_2 + PIO2_3 ):\nvar PIO2_3T = 8.47842766036889956997e-32; // 0x397B839A, 0x252049C1\n\n// Exponent mask (2047 => 0x7ff):\nvar EXPONENT_MASK = 0x7ff | 0; // asm type annotation\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r` for medium-sized inputs.\n*\n* @private\n* @param {number} x - input value\n* @param {uint32} ix - high word of `x`\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*/\nfunction rempio2Medium(x, ix, y) {\n  var high;\n  var n;\n  var t;\n  var r;\n  var w;\n  var i;\n  var j;\n  n = round(x * INVPIO2);\n  r = x - n * PIO2_1;\n  w = n * PIO2_1T;\n\n  // First rounding (good to 85 bits)...\n  j = ix >> 20 | 0; // asm type annotation\n  y[0] = r - w;\n  high = getHighWord(y[0]);\n  i = j - (high >> 20 & EXPONENT_MASK);\n\n  // Check if a second iteration is needed (good to 118 bits)...\n  if (i > 16) {\n    t = r;\n    w = n * PIO2_2;\n    r = t - w;\n    w = n * PIO2_2T - (t - r - w);\n    y[0] = r - w;\n    high = getHighWord(y[0]);\n    i = j - (high >> 20 & EXPONENT_MASK);\n\n    // Check if a third iteration is needed (151 bits accumulated)...\n    if (i > 49) {\n      t = r;\n      w = n * PIO2_3;\n      r = t - w;\n      w = n * PIO2_3T - (t - r - w);\n      y[0] = r - w;\n    }\n  }\n  y[1] = r - y[0] - w;\n  return n;\n}\n\n// EXPORTS //\n\nmodule.exports = rempio2Medium;","map":{"version":3,"names":["round","require","getHighWord","INVPIO2","PIO2_1","PIO2_1T","PIO2_2","PIO2_2T","PIO2_3","PIO2_3T","EXPONENT_MASK","rempio2Medium","x","ix","y","high","n","t","r","w","i","j","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-rempio2/lib/rempio2_medium.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/k_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar round = require( '@stdlib/math-base-special-round' );\nvar getHighWord = require( '@stdlib/number-float64-base-get-high-word' );\n\n\n// VARIABLES //\n\n// 53 bits of 2/π:\nvar INVPIO2 = 6.36619772367581382433e-01; // 0x3FE45F30, 0x6DC9C883\n\n// First 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\n\n// Another 33 bits of π/2:\nvar PIO2_2 = 6.07710050630396597660e-11;  // 0x3DD0B461, 0x1A600000\n\n// PIO2_2T = π/2 - ( PIO2_1 + PIO2_2 ):\nvar PIO2_2T = 2.02226624879595063154e-21; // 0x3BA3198A, 0x2E037073\n\n// Another 33 bits of π/2:\nvar PIO2_3 = 2.02226624871116645580e-21;  // 0x3BA3198A, 0x2E000000\n\n// PIO2_3T = π/2 - ( PIO2_1 + PIO2_2 + PIO2_3 ):\nvar PIO2_3T = 8.47842766036889956997e-32; // 0x397B839A, 0x252049C1\n\n// Exponent mask (2047 => 0x7ff):\nvar EXPONENT_MASK = 0x7ff|0; // asm type annotation\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r` for medium-sized inputs.\n*\n* @private\n* @param {number} x - input value\n* @param {uint32} ix - high word of `x`\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*/\nfunction rempio2Medium( x, ix, y ) {\n\tvar high;\n\tvar n;\n\tvar t;\n\tvar r;\n\tvar w;\n\tvar i;\n\tvar j;\n\n\tn = round( x * INVPIO2 );\n\tr = x - ( n * PIO2_1 );\n\tw = n * PIO2_1T;\n\n\t// First rounding (good to 85 bits)...\n\tj = (ix >> 20)|0; // asm type annotation\n\ty[ 0 ] = r - w;\n\thigh = getHighWord( y[0] );\n\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t// Check if a second iteration is needed (good to 118 bits)...\n\tif ( i > 16 ) {\n\t\tt = r;\n\t\tw = n * PIO2_2;\n\t\tr = t - w;\n\t\tw = (n * PIO2_2T) - ((t-r) - w);\n\t\ty[ 0 ] = r - w;\n\t\thigh = getHighWord( y[0] );\n\t\ti = j - ( (high >> 20) & EXPONENT_MASK );\n\n\t\t// Check if a third iteration is needed (151 bits accumulated)...\n\t\tif ( i > 49 ) {\n\t\t\tt = r;\n\t\t\tw = n * PIO2_3;\n\t\t\tr = t - w;\n\t\t\tw = (n * PIO2_3T) - ((t-r) - w);\n\t\t\ty[ 0 ] = r - w;\n\t\t}\n\t}\n\ty[ 1 ] = (r - y[0]) - w;\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rempio2Medium;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAE,iCAAkC,CAAC;AACxD,IAAIC,WAAW,GAAGD,OAAO,CAAE,2CAA4C,CAAC;;AAGxE;;AAEA;AACA,IAAIE,OAAO,GAAG,0BAA0B,CAAC,CAAC;;AAE1C;AACA,IAAIC,MAAM,GAAG,0BAA0B,CAAC,CAAE;;AAE1C;AACA,IAAIC,OAAO,GAAG,0BAA0B,CAAC,CAAC;;AAE1C;AACA,IAAIC,MAAM,GAAG,0BAA0B,CAAC,CAAE;;AAE1C;AACA,IAAIC,OAAO,GAAG,0BAA0B,CAAC,CAAC;;AAE1C;AACA,IAAIC,MAAM,GAAG,0BAA0B,CAAC,CAAE;;AAE1C;AACA,IAAIC,OAAO,GAAG,0BAA0B,CAAC,CAAC;;AAE1C;AACA,IAAIC,aAAa,GAAG,KAAK,GAAC,CAAC,CAAC,CAAC;;AAG7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAAEC,CAAC,EAAEC,EAAE,EAAEC,CAAC,EAAG;EAClC,IAAIC,IAAI;EACR,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EAELL,CAAC,GAAGhB,KAAK,CAAEY,CAAC,GAAGT,OAAQ,CAAC;EACxBe,CAAC,GAAGN,CAAC,GAAKI,CAAC,GAAGZ,MAAQ;EACtBe,CAAC,GAAGH,CAAC,GAAGX,OAAO;;EAEf;EACAgB,CAAC,GAAIR,EAAE,IAAI,EAAE,GAAE,CAAC,CAAC,CAAC;EAClBC,CAAC,CAAE,CAAC,CAAE,GAAGI,CAAC,GAAGC,CAAC;EACdJ,IAAI,GAAGb,WAAW,CAAEY,CAAC,CAAC,CAAC,CAAE,CAAC;EAC1BM,CAAC,GAAGC,CAAC,IAAMN,IAAI,IAAI,EAAE,GAAIL,aAAa,CAAE;;EAExC;EACA,IAAKU,CAAC,GAAG,EAAE,EAAG;IACbH,CAAC,GAAGC,CAAC;IACLC,CAAC,GAAGH,CAAC,GAAGV,MAAM;IACdY,CAAC,GAAGD,CAAC,GAAGE,CAAC;IACTA,CAAC,GAAIH,CAAC,GAAGT,OAAO,IAAMU,CAAC,GAACC,CAAC,GAAIC,CAAC,CAAC;IAC/BL,CAAC,CAAE,CAAC,CAAE,GAAGI,CAAC,GAAGC,CAAC;IACdJ,IAAI,GAAGb,WAAW,CAAEY,CAAC,CAAC,CAAC,CAAE,CAAC;IAC1BM,CAAC,GAAGC,CAAC,IAAMN,IAAI,IAAI,EAAE,GAAIL,aAAa,CAAE;;IAExC;IACA,IAAKU,CAAC,GAAG,EAAE,EAAG;MACbH,CAAC,GAAGC,CAAC;MACLC,CAAC,GAAGH,CAAC,GAAGR,MAAM;MACdU,CAAC,GAAGD,CAAC,GAAGE,CAAC;MACTA,CAAC,GAAIH,CAAC,GAAGP,OAAO,IAAMQ,CAAC,GAACC,CAAC,GAAIC,CAAC,CAAC;MAC/BL,CAAC,CAAE,CAAC,CAAE,GAAGI,CAAC,GAAGC,CAAC;IACf;EACD;EACAL,CAAC,CAAE,CAAC,CAAE,GAAII,CAAC,GAAGJ,CAAC,CAAC,CAAC,CAAC,GAAIK,CAAC;EACvB,OAAOH,CAAC;AACT;;AAGA;;AAEAM,MAAM,CAACC,OAAO,GAAGZ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}