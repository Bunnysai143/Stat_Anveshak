{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar isnan = require('@stdlib/math-base-assert-is-nan');\nvar isInteger = require('@stdlib/math-base-assert-is-integer');\nvar isNegativeZero = require('@stdlib/math-base-assert-is-negative-zero');\nvar abs = require('@stdlib/math-base-special-abs');\nvar floor = require('@stdlib/math-base-special-floor');\nvar sin = require('@stdlib/math-base-special-sin');\nvar PINF = require('@stdlib/constants-float64-pinf');\nvar NINF = require('@stdlib/constants-float64-ninf');\nvar PI = require('@stdlib/constants-float64-pi');\nvar stirlingApprox = require('./stirling_approximation.js');\nvar smallApprox = require('./small_approximation.js');\nvar rateval = require('./rational_pq.js');\n\n// MAIN //\n\n/**\n* Evaluates the gamma function.\n*\n* ## Method\n*\n* 1.  Arguments \\\\(|x| \\leq 34\\\\) are reduced by recurrence and the function approximated by a rational function of degree \\\\(6/7\\\\) in the interval \\\\((2,3)\\\\).\n* 2.  Large negative arguments are made positive using a reflection formula.\n* 3.  Large arguments are handled by Stirling's formula.\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain    | # trials | peak    | rms     |\n*     |:----------:|:---------:|:--------:|:-------:|:-------:|\n*     | DEC        | -34,34    | 10000    | 1.3e-16 | 2.5e-17 |\n*     | IEEE       | -170,-33  | 20000    | 2.3e-15 | 3.3e-16 |\n*     | IEEE       | -33, 33   | 20000    | 9.4e-16 | 2.2e-16 |\n*     | IEEE       | 33, 171.6 | 20000    | 2.3e-15 | 3.2e-16 |\n*\n* -   Error for arguments outside the test range will be larger owing to error amplification by the exponential function.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gamma( 4.0 );\n* // returns 6.0\n*\n* @example\n* var v = gamma( -1.5 );\n* // returns ~2.363\n*\n* @example\n* var v = gamma( -0.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = gamma( 0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = gamma( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gamma( -0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = gamma( NaN );\n* // returns NaN\n*/\nfunction gamma(x) {\n  var sign;\n  var q;\n  var p;\n  var z;\n  if (isInteger(x) && x < 0 || x === NINF || isnan(x)) {\n    return NaN;\n  }\n  if (x === 0.0) {\n    if (isNegativeZero(x)) {\n      return NINF;\n    }\n    return PINF;\n  }\n  if (x > 171.61447887182298) {\n    return PINF;\n  }\n  if (x < -170.5674972726612) {\n    return 0.0;\n  }\n  q = abs(x);\n  if (q > 33.0) {\n    if (x >= 0.0) {\n      return stirlingApprox(x);\n    }\n    p = floor(q);\n\n    // Check whether `x` is even...\n    if ((p & 1) === 0) {\n      sign = -1.0;\n    } else {\n      sign = 1.0;\n    }\n    z = q - p;\n    if (z > 0.5) {\n      p += 1.0;\n      z = q - p;\n    }\n    z = q * sin(PI * z);\n    return sign * PI / (abs(z) * stirlingApprox(q));\n  }\n  // Reduce `x`...\n  z = 1.0;\n  while (x >= 3.0) {\n    x -= 1.0;\n    z *= x;\n  }\n  while (x < 0.0) {\n    if (x > -1.0e-9) {\n      return smallApprox(x, z);\n    }\n    z /= x;\n    x += 1.0;\n  }\n  while (x < 2.0) {\n    if (x < 1.0e-9) {\n      return smallApprox(x, z);\n    }\n    z /= x;\n    x += 1.0;\n  }\n  if (x === 2.0) {\n    return z;\n  }\n  x -= 2.0;\n  return z * rateval(x);\n}\n\n// EXPORTS //\n\nmodule.exports = gamma;","map":{"version":3,"names":["isnan","require","isInteger","isNegativeZero","abs","floor","sin","PINF","NINF","PI","stirlingApprox","smallApprox","rateval","gamma","x","sign","q","p","z","NaN","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-gamma/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The original C code, long comment, copyright, license, and constants are from [Cephes]{@link http://www.netlib.org/cephes}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright 1984, 1987, 1989, 1992, 2000 by Stephen L. Moshier\n*\n* Some software in this archive may be from the book _Methods and Programs for Mathematical Functions_ (Prentice-Hall or Simon & Schuster International, 1989) or from the Cephes Mathematical Library, a commercial product. In either event, it is copyrighted by the author. What you see here may be used freely but it comes with no support or guarantee.\n*\n* Stephen L. Moshier\n* moshier@na-net.ornl.gov\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar isInteger = require( '@stdlib/math-base-assert-is-integer' );\nvar isNegativeZero = require( '@stdlib/math-base-assert-is-negative-zero' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar sin = require( '@stdlib/math-base-special-sin' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar PI = require( '@stdlib/constants-float64-pi' );\nvar stirlingApprox = require( './stirling_approximation.js' );\nvar smallApprox = require( './small_approximation.js' );\nvar rateval = require( './rational_pq.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates the gamma function.\n*\n* ## Method\n*\n* 1.  Arguments \\\\(|x| \\leq 34\\\\) are reduced by recurrence and the function approximated by a rational function of degree \\\\(6/7\\\\) in the interval \\\\((2,3)\\\\).\n* 2.  Large negative arguments are made positive using a reflection formula.\n* 3.  Large arguments are handled by Stirling's formula.\n*\n* ## Notes\n*\n* -   Relative error:\n*\n*     | arithmetic | domain    | # trials | peak    | rms     |\n*     |:----------:|:---------:|:--------:|:-------:|:-------:|\n*     | DEC        | -34,34    | 10000    | 1.3e-16 | 2.5e-17 |\n*     | IEEE       | -170,-33  | 20000    | 2.3e-15 | 3.3e-16 |\n*     | IEEE       | -33, 33   | 20000    | 9.4e-16 | 2.2e-16 |\n*     | IEEE       | 33, 171.6 | 20000    | 2.3e-15 | 3.2e-16 |\n*\n* -   Error for arguments outside the test range will be larger owing to error amplification by the exponential function.\n*\n* @param {number} x - input value\n* @returns {number} function value\n*\n* @example\n* var v = gamma( 4.0 );\n* // returns 6.0\n*\n* @example\n* var v = gamma( -1.5 );\n* // returns ~2.363\n*\n* @example\n* var v = gamma( -0.5 );\n* // returns ~-3.545\n*\n* @example\n* var v = gamma( 0.5 );\n* // returns ~1.772\n*\n* @example\n* var v = gamma( 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = gamma( -0.0 );\n* // returns -Infinity\n*\n* @example\n* var v = gamma( NaN );\n* // returns NaN\n*/\nfunction gamma( x ) {\n\tvar sign;\n\tvar q;\n\tvar p;\n\tvar z;\n\tif (\n\t\t(isInteger( x ) && x < 0) ||\n\t\tx === NINF ||\n\t\tisnan( x )\n\t) {\n\t\treturn NaN;\n\t}\n\tif ( x === 0.0 ) {\n\t\tif ( isNegativeZero( x ) ) {\n\t\t\treturn NINF;\n\t\t}\n\t\treturn PINF;\n\t}\n\tif ( x > 171.61447887182298 ) {\n\t\treturn PINF;\n\t}\n\tif ( x < -170.5674972726612 ) {\n\t\treturn 0.0;\n\t}\n\tq = abs( x );\n\tif ( q > 33.0 ) {\n\t\tif ( x >= 0.0 ) {\n\t\t\treturn stirlingApprox( x );\n\t\t}\n\t\tp = floor( q );\n\n\t\t// Check whether `x` is even...\n\t\tif ( (p&1) === 0 ) {\n\t\t\tsign = -1.0;\n\t\t} else {\n\t\t\tsign = 1.0;\n\t\t}\n\t\tz = q - p;\n\t\tif ( z > 0.5 ) {\n\t\t\tp += 1.0;\n\t\t\tz = q - p;\n\t\t}\n\t\tz = q * sin( PI * z );\n\t\treturn sign * PI / ( abs(z)*stirlingApprox(q) );\n\t}\n\t// Reduce `x`...\n\tz = 1.0;\n\twhile ( x >= 3.0 ) {\n\t\tx -= 1.0;\n\t\tz *= x;\n\t}\n\twhile ( x < 0.0 ) {\n\t\tif ( x > -1.0e-9 ) {\n\t\t\treturn smallApprox( x, z );\n\t\t}\n\t\tz /= x;\n\t\tx += 1.0;\n\t}\n\twhile ( x < 2.0 ) {\n\t\tif ( x < 1.0e-9 ) {\n\t\t\treturn smallApprox( x, z );\n\t\t}\n\t\tz /= x;\n\t\tx += 1.0;\n\t}\n\tif ( x === 2.0 ) {\n\t\treturn z;\n\t}\n\tx -= 2.0;\n\treturn z * rateval( x );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gamma;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}