{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n*\n* Optimized by Bruce D. Evans.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar ABS_MASK = require('@stdlib/constants-float64-high-word-abs-mask');\nvar EXPONENT_MASK = require('@stdlib/constants-float64-high-word-exponent-mask');\nvar SIGNIFICAND_MASK = require('@stdlib/constants-float64-high-word-significand-mask');\nvar getHighWord = require('@stdlib/number-float64-base-get-high-word');\nvar getLowWord = require('@stdlib/number-float64-base-get-low-word');\nvar fromWords = require('@stdlib/number-float64-base-from-words');\nvar rempio2Kernel = require('./kernel_rempio2.js');\nvar rempio2Medium = require('./rempio2_medium.js');\n\n// VARIABLES //\n\nvar ZERO = 0.00000000000000000000e+00; // 0x00000000, 0x00000000\nvar TWO24 = 1.67772160000000000000e+07; // 0x41700000, 0x00000000\n\n// 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00; // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\nvar TWO_PIO2_1T = 2.0 * PIO2_1T;\nvar THREE_PIO2_1T = 3.0 * PIO2_1T;\nvar FOUR_PIO2_1T = 4.0 * PIO2_1T;\n\n// High word significand for π and π/2: 0x921fb = 598523 => 00000000000010010010000111111011\nvar PI_HIGH_WORD_SIGNIFICAND = 0x921fb | 0; // asm type annotation\n\n// High word for π/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb | 0; // asm type annotation\n\n// High word for 3π/4: 0x4002d97c = 1073928572 => 01000000000000101101100101111100\nvar THREE_PIO4_HIGH_WORD = 0x4002d97c | 0; // asm type annotation\n\n// High word for 5π/4: 0x400f6a7a = 1074752122 => 01000000000011110110101001111010\nvar FIVE_PIO4_HIGH_WORD = 0x400f6a7a | 0; // asm type annotation\n\n// High word for 6π/4: 0x4012d97c = 1074977148 => 01000000000100101101100101111100\nvar THREE_PIO2_HIGH_WORD = 0x4012d97c | 0; // asm type annotation\n\n// High word for 7π/4: 0x4015fdbc = 1075183036 => 01000000000101011111110110111100\nvar SEVEN_PIO4_HIGH_WORD = 0x4015fdbc | 0; // asm type annotation\n\n// High word for 8π/4: 0x401921fb = 1075388923 => 01000000000110010010000111111011\nvar TWO_PI_HIGH_WORD = 0x401921fb | 0; // asm type annotation\n\n// High word for 9π/4: 0x401c463b = 1075594811 => 01000000000111000100011000111011\nvar NINE_PIO4_HIGH_WORD = 0x401c463b | 0; // asm type annotation\n\n// 2^20*π/2 = 1647099.3291652855 => 0100000100111001001000011111101101010100010001000010110100011000 => high word => 0x413921fb = 1094263291 => 01000001001110010010000111111011\nvar MEDIUM = 0x413921fb | 0; // asm type annotation\n\n// Arrays for storing temporary values:\nvar TX = [0.0, 0.0, 0.0];\nvar TY = [0.0, 0.0];\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r`.\n*\n* ## Notes\n*\n* -   Returns `n` and stores the remainder `r` as two numbers `y[0]` and `y[1]`, such that `y[0]+y[1] = r`.\n*\n* @param {number} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( NaN, y );\n* // returns 0\n*\n* var y1 = y[ 0 ];\n* // returns NaN\n*\n* var y2 = y[ 1 ];\n* // returns NaN\n*/\nfunction rempio2(x, y) {\n  var low;\n  var e0;\n  var hx;\n  var ix;\n  var nx;\n  var i;\n  var n;\n  var z;\n  hx = getHighWord(x);\n  ix = hx & ABS_MASK | 0; // asm type annotation\n\n  // Case: |x| ~<= π/4 (no need for reduction)\n  if (ix <= PIO4_HIGH_WORD) {\n    y[0] = x;\n    y[1] = 0.0;\n    return 0;\n  }\n  // Case: |x| ~<= 5π/4\n  if (ix <= FIVE_PIO4_HIGH_WORD) {\n    // Case: |x| ~= π/2 or π\n    if ((ix & SIGNIFICAND_MASK) === PI_HIGH_WORD_SIGNIFICAND) {\n      // Cancellation => use medium case\n      return rempio2Medium(x, ix, y);\n    }\n    // Case: |x| ~<= 3π/4\n    if (ix <= THREE_PIO4_HIGH_WORD) {\n      if (x > 0.0) {\n        z = x - PIO2_1;\n        y[0] = z - PIO2_1T;\n        y[1] = z - y[0] - PIO2_1T;\n        return 1;\n      }\n      z = x + PIO2_1;\n      y[0] = z + PIO2_1T;\n      y[1] = z - y[0] + PIO2_1T;\n      return -1;\n    }\n    if (x > 0.0) {\n      z = x - 2.0 * PIO2_1;\n      y[0] = z - TWO_PIO2_1T;\n      y[1] = z - y[0] - TWO_PIO2_1T;\n      return 2;\n    }\n    z = x + 2.0 * PIO2_1;\n    y[0] = z + TWO_PIO2_1T;\n    y[1] = z - y[0] + TWO_PIO2_1T;\n    return -2;\n  }\n  // Case: |x| ~<= 9π/4\n  if (ix <= NINE_PIO4_HIGH_WORD) {\n    // Case: |x| ~<= 7π/4\n    if (ix <= SEVEN_PIO4_HIGH_WORD) {\n      // Case: |x| ~= 3π/2\n      if (ix === THREE_PIO2_HIGH_WORD) {\n        return rempio2Medium(x, ix, y);\n      }\n      if (x > 0.0) {\n        z = x - 3.0 * PIO2_1;\n        y[0] = z - THREE_PIO2_1T;\n        y[1] = z - y[0] - THREE_PIO2_1T;\n        return 3;\n      }\n      z = x + 3.0 * PIO2_1;\n      y[0] = z + THREE_PIO2_1T;\n      y[1] = z - y[0] + THREE_PIO2_1T;\n      return -3;\n    }\n    // Case: |x| ~= 4π/2\n    if (ix === TWO_PI_HIGH_WORD) {\n      return rempio2Medium(x, ix, y);\n    }\n    if (x > 0.0) {\n      z = x - 4.0 * PIO2_1;\n      y[0] = z - FOUR_PIO2_1T;\n      y[1] = z - y[0] - FOUR_PIO2_1T;\n      return 4;\n    }\n    z = x + 4.0 * PIO2_1;\n    y[0] = z + FOUR_PIO2_1T;\n    y[1] = z - y[0] + FOUR_PIO2_1T;\n    return -4;\n  }\n  // Case: |x| ~< 2^20*π/2 (medium size)\n  if (ix < MEDIUM) {\n    return rempio2Medium(x, ix, y);\n  }\n  // Case: x is NaN or infinity\n  if (ix >= EXPONENT_MASK) {\n    y[0] = NaN;\n    y[1] = NaN;\n    return 0.0;\n  }\n  // Set z = scalbn(|x|, ilogb(x)-23)...\n  low = getLowWord(x);\n  e0 = (ix >> 20) - 1046; // `e0 = ilogb(z) - 23` => unbiased exponent minus 23\n  z = fromWords(ix - (e0 << 20 | 0), low);\n  for (i = 0; i < 2; i++) {\n    TX[i] = z | 0;\n    z = (z - TX[i]) * TWO24;\n  }\n  TX[2] = z;\n  nx = 3;\n  while (TX[nx - 1] === ZERO) {\n    // Skip zero term...\n    nx -= 1;\n  }\n  n = rempio2Kernel(TX, TY, e0, nx, 1);\n  if (x < 0.0) {\n    y[0] = -TY[0];\n    y[1] = -TY[1];\n    return -n;\n  }\n  y[0] = TY[0];\n  y[1] = TY[1];\n  return n;\n}\n\n// EXPORTS //\n\nmodule.exports = rempio2;","map":{"version":3,"names":["ABS_MASK","require","EXPONENT_MASK","SIGNIFICAND_MASK","getHighWord","getLowWord","fromWords","rempio2Kernel","rempio2Medium","ZERO","TWO24","PIO2_1","PIO2_1T","TWO_PIO2_1T","THREE_PIO2_1T","FOUR_PIO2_1T","PI_HIGH_WORD_SIGNIFICAND","PIO4_HIGH_WORD","THREE_PIO4_HIGH_WORD","FIVE_PIO4_HIGH_WORD","THREE_PIO2_HIGH_WORD","SEVEN_PIO4_HIGH_WORD","TWO_PI_HIGH_WORD","NINE_PIO4_HIGH_WORD","MEDIUM","TX","TY","rempio2","x","y","low","e0","hx","ix","nx","i","n","z","NaN","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-rempio2/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/e_rem_pio2.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n*\n* Optimized by Bruce D. Evans.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ABS_MASK = require( '@stdlib/constants-float64-high-word-abs-mask' );\nvar EXPONENT_MASK = require( '@stdlib/constants-float64-high-word-exponent-mask' );\nvar SIGNIFICAND_MASK = require( '@stdlib/constants-float64-high-word-significand-mask' );\nvar getHighWord = require( '@stdlib/number-float64-base-get-high-word' );\nvar getLowWord = require( '@stdlib/number-float64-base-get-low-word' );\nvar fromWords = require( '@stdlib/number-float64-base-from-words' );\nvar rempio2Kernel = require( './kernel_rempio2.js' );\nvar rempio2Medium = require( './rempio2_medium.js' );\n\n\n// VARIABLES //\n\nvar ZERO = 0.00000000000000000000e+00;    // 0x00000000, 0x00000000\nvar TWO24 = 1.67772160000000000000e+07;   // 0x41700000, 0x00000000\n\n// 33 bits of π/2:\nvar PIO2_1 = 1.57079632673412561417e+00;  // 0x3FF921FB, 0x54400000\n\n// PIO2_1T = π/2 - PIO2_1:\nvar PIO2_1T = 6.07710050650619224932e-11; // 0x3DD0B461, 0x1A626331\nvar TWO_PIO2_1T = 2.0 * PIO2_1T;\nvar THREE_PIO2_1T = 3.0 * PIO2_1T;\nvar FOUR_PIO2_1T = 4.0 * PIO2_1T;\n\n// High word significand for π and π/2: 0x921fb = 598523 => 00000000000010010010000111111011\nvar PI_HIGH_WORD_SIGNIFICAND = 0x921fb|0; // asm type annotation\n\n// High word for π/4: 0x3fe921fb = 1072243195 => 00111111111010010010000111111011\nvar PIO4_HIGH_WORD = 0x3fe921fb|0; // asm type annotation\n\n// High word for 3π/4: 0x4002d97c = 1073928572 => 01000000000000101101100101111100\nvar THREE_PIO4_HIGH_WORD = 0x4002d97c|0; // asm type annotation\n\n// High word for 5π/4: 0x400f6a7a = 1074752122 => 01000000000011110110101001111010\nvar FIVE_PIO4_HIGH_WORD = 0x400f6a7a|0; // asm type annotation\n\n// High word for 6π/4: 0x4012d97c = 1074977148 => 01000000000100101101100101111100\nvar THREE_PIO2_HIGH_WORD = 0x4012d97c|0; // asm type annotation\n\n// High word for 7π/4: 0x4015fdbc = 1075183036 => 01000000000101011111110110111100\nvar SEVEN_PIO4_HIGH_WORD = 0x4015fdbc|0; // asm type annotation\n\n// High word for 8π/4: 0x401921fb = 1075388923 => 01000000000110010010000111111011\nvar TWO_PI_HIGH_WORD = 0x401921fb|0; // asm type annotation\n\n// High word for 9π/4: 0x401c463b = 1075594811 => 01000000000111000100011000111011\nvar NINE_PIO4_HIGH_WORD = 0x401c463b|0; // asm type annotation\n\n// 2^20*π/2 = 1647099.3291652855 => 0100000100111001001000011111101101010100010001000010110100011000 => high word => 0x413921fb = 1094263291 => 01000001001110010010000111111011\nvar MEDIUM = 0x413921fb|0; // asm type annotation\n\n// Arrays for storing temporary values:\nvar TX = [ 0.0, 0.0, 0.0 ];\nvar TY = [ 0.0, 0.0 ];\n\n\n// MAIN //\n\n/**\n* Computes `x - nπ/2 = r`.\n*\n* ## Notes\n*\n* -   Returns `n` and stores the remainder `r` as two numbers `y[0]` and `y[1]`, such that `y[0]+y[1] = r`.\n*\n* @param {number} x - input value\n* @param {(Array|TypedArray|Object)} y - remainder elements\n* @returns {integer} factor of `π/2`\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( 128.0, y );\n* // returns 81\n*\n* var y1 = y[ 0 ];\n* // returns ~0.765\n*\n* var y2 = y[ 1 ];\n* // returns ~3.618e-17\n*\n* @example\n* var y = [ 0.0, 0.0 ];\n* var n = rempio2( NaN, y );\n* // returns 0\n*\n* var y1 = y[ 0 ];\n* // returns NaN\n*\n* var y2 = y[ 1 ];\n* // returns NaN\n*/\nfunction rempio2( x, y ) {\n\tvar low;\n\tvar e0;\n\tvar hx;\n\tvar ix;\n\tvar nx;\n\tvar i;\n\tvar n;\n\tvar z;\n\n\thx = getHighWord( x );\n\tix = (hx & ABS_MASK)|0; // asm type annotation\n\n\t// Case: |x| ~<= π/4 (no need for reduction)\n\tif ( ix <= PIO4_HIGH_WORD ) {\n\t\ty[ 0 ] = x;\n\t\ty[ 1 ] = 0.0;\n\t\treturn 0;\n\t}\n\t// Case: |x| ~<= 5π/4\n\tif ( ix <= FIVE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~= π/2 or π\n\t\tif ( (ix & SIGNIFICAND_MASK) === PI_HIGH_WORD_SIGNIFICAND ) {\n\t\t\t// Cancellation => use medium case\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\t// Case: |x| ~<= 3π/4\n\t\tif ( ix <= THREE_PIO4_HIGH_WORD ) {\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - PIO2_1;\n\t\t\t\ty[ 0 ] = z - PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - PIO2_1T;\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tz = x + PIO2_1;\n\t\t\ty[ 0 ] = z + PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + PIO2_1T;\n\t\t\treturn -1;\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 2.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - TWO_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - TWO_PIO2_1T;\n\t\t\treturn 2;\n\t\t}\n\t\tz = x + ( 2.0*PIO2_1 );\n\t\ty[ 0 ] = z + TWO_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + TWO_PIO2_1T;\n\t\treturn -2;\n\t}\n\t// Case: |x| ~<= 9π/4\n\tif ( ix <= NINE_PIO4_HIGH_WORD ) {\n\t\t// Case: |x| ~<= 7π/4\n\t\tif ( ix <= SEVEN_PIO4_HIGH_WORD ) {\n\t\t\t// Case: |x| ~= 3π/2\n\t\t\tif ( ix === THREE_PIO2_HIGH_WORD ) {\n\t\t\t\treturn rempio2Medium( x, ix, y );\n\t\t\t}\n\t\t\tif ( x > 0.0 ) {\n\t\t\t\tz = x - ( 3.0*PIO2_1 );\n\t\t\t\ty[ 0 ] = z - THREE_PIO2_1T;\n\t\t\t\ty[ 1 ] = (z - y[0]) - THREE_PIO2_1T;\n\t\t\t\treturn 3;\n\t\t\t}\n\t\t\tz = x + ( 3.0*PIO2_1 );\n\t\t\ty[ 0 ] = z + THREE_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) + THREE_PIO2_1T;\n\t\t\treturn -3;\n\t\t}\n\t\t// Case: |x| ~= 4π/2\n\t\tif ( ix === TWO_PI_HIGH_WORD ) {\n\t\t\treturn rempio2Medium( x, ix, y );\n\t\t}\n\t\tif ( x > 0.0 ) {\n\t\t\tz = x - ( 4.0*PIO2_1 );\n\t\t\ty[ 0 ] = z - FOUR_PIO2_1T;\n\t\t\ty[ 1 ] = (z - y[0]) - FOUR_PIO2_1T;\n\t\t\treturn 4;\n\t\t}\n\t\tz = x + ( 4.0*PIO2_1 );\n\t\ty[ 0 ] = z + FOUR_PIO2_1T;\n\t\ty[ 1 ] = (z - y[0]) + FOUR_PIO2_1T;\n\t\treturn -4;\n\t}\n\t// Case: |x| ~< 2^20*π/2 (medium size)\n\tif ( ix < MEDIUM ) {\n\t\treturn rempio2Medium( x, ix, y );\n\t}\n\t// Case: x is NaN or infinity\n\tif ( ix >= EXPONENT_MASK ) {\n\t\ty[ 0 ] = NaN;\n\t\ty[ 1 ] = NaN;\n\t\treturn 0.0;\n\t}\n\t// Set z = scalbn(|x|, ilogb(x)-23)...\n\tlow = getLowWord( x );\n\te0 = (ix >> 20) - 1046; // `e0 = ilogb(z) - 23` => unbiased exponent minus 23\n\tz = fromWords( ix - ((e0 << 20)|0), low );\n\tfor ( i = 0; i < 2; i++ ) {\n\t\tTX[ i ] = z|0;\n\t\tz = (z - TX[i]) * TWO24;\n\t}\n\tTX[ 2 ] = z;\n\tnx = 3;\n\twhile ( TX[ nx-1 ] === ZERO ) {\n\t\t// Skip zero term...\n\t\tnx -= 1;\n\t}\n\tn = rempio2Kernel( TX, TY, e0, nx, 1 );\n\tif ( x < 0.0 ) {\n\t\ty[ 0 ] = -TY[ 0 ];\n\t\ty[ 1 ] = -TY[ 1 ];\n\t\treturn -n;\n\t}\n\ty[ 0 ] = TY[ 0 ];\n\ty[ 1 ] = TY[ 1 ];\n\treturn n;\n}\n\n\n// EXPORTS //\n\nmodule.exports = rempio2;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}