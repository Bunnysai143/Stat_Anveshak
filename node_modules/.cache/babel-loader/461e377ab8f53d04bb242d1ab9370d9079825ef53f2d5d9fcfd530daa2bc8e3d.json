{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar setLowWord = require('@stdlib/number-float64-base-set-low-word');\nvar polyvalW = require('./polyval_w.js');\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx(out, ax) {\n  var t2;\n  var t1;\n  var t;\n  var w;\n  var u;\n  var v;\n  t = ax - 1.0; // `t` has `20` trailing zeros\n  w = t * t * polyvalW(t);\n  u = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n  v = t * INV_LN2_LO - w * INV_LN2;\n  t1 = u + v;\n  t1 = setLowWord(t1, 0);\n  t2 = v - (t1 - u);\n  out[0] = t1;\n  out[1] = t2;\n  return out;\n}\n\n// EXPORTS //\n\nmodule.exports = logx;","map":{"version":3,"names":["setLowWord","require","polyvalW","INV_LN2","INV_LN2_HI","INV_LN2_LO","logx","out","ax","t2","t1","t","w","u","v","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-pow/lib/logx.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setLowWord = require( '@stdlib/number-float64-base-set-low-word' );\nvar polyvalW = require( './polyval_w.js' );\n\n\n// VARIABLES //\n\n// 1/LN2\nvar INV_LN2 = 1.44269504088896338700e+00; // 0x3FF71547, 0x652B82FE\n\n// High (24 bits): 1/LN2\nvar INV_LN2_HI = 1.44269502162933349609e+00; // 0x3FF71547, 0x60000000\n\n// Low: 1/LN2\nvar INV_LN2_LO = 1.92596299112661746887e-08; // 0x3E54AE0B, 0xF85DDF44\n\n\n// MAIN //\n\n/**\n* Computes \\\\(\\operatorname{log}(x)\\\\) assuming \\\\(|1-x|\\\\) is small and using the approximation \\\\(x - x^2/2 + x^3/3 - x^4/4\\\\).\n*\n* @private\n* @param {Array} out - output array\n* @param {number} ax - absolute value of `x`\n* @returns {Array} output array containing a tuple comprised of high and low parts\n*\n* @example\n* var t = logx( [ 0.0, 0.0 ], 9.0 ); // => [ t1, t2 ]\n* // returns [ -1265.7236328125, -0.0008163940840404393 ]\n*/\nfunction logx( out, ax ) {\n\tvar t2;\n\tvar t1;\n\tvar t;\n\tvar w;\n\tvar u;\n\tvar v;\n\n\tt = ax - 1.0; // `t` has `20` trailing zeros\n\tw = t * t * polyvalW( t );\n\tu = INV_LN2_HI * t; // `INV_LN2_HI` has `21` significant bits\n\tv = ( t*INV_LN2_LO ) - ( w*INV_LN2 );\n\tt1 = u + v;\n\tt1 = setLowWord( t1, 0 );\n\tt2 = v - (t1 - u);\n\n\tout[ 0 ] = t1;\n\tout[ 1 ] = t2;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nmodule.exports = logx;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAE,0CAA2C,CAAC;AACtE,IAAIC,QAAQ,GAAGD,OAAO,CAAE,gBAAiB,CAAC;;AAG1C;;AAEA;AACA,IAAIE,OAAO,GAAG,0BAA0B,CAAC,CAAC;;AAE1C;AACA,IAAIC,UAAU,GAAG,0BAA0B,CAAC,CAAC;;AAE7C;AACA,IAAIC,UAAU,GAAG,0BAA0B,CAAC,CAAC;;AAG7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAIA,CAAEC,GAAG,EAAEC,EAAE,EAAG;EACxB,IAAIC,EAAE;EACN,IAAIC,EAAE;EACN,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EACL,IAAIC,CAAC;EAELH,CAAC,GAAGH,EAAE,GAAG,GAAG,CAAC,CAAC;EACdI,CAAC,GAAGD,CAAC,GAAGA,CAAC,GAAGT,QAAQ,CAAES,CAAE,CAAC;EACzBE,CAAC,GAAGT,UAAU,GAAGO,CAAC,CAAC,CAAC;EACpBG,CAAC,GAAKH,CAAC,GAACN,UAAU,GAAOO,CAAC,GAACT,OAAS;EACpCO,EAAE,GAAGG,CAAC,GAAGC,CAAC;EACVJ,EAAE,GAAGV,UAAU,CAAEU,EAAE,EAAE,CAAE,CAAC;EACxBD,EAAE,GAAGK,CAAC,IAAIJ,EAAE,GAAGG,CAAC,CAAC;EAEjBN,GAAG,CAAE,CAAC,CAAE,GAAGG,EAAE;EACbH,GAAG,CAAE,CAAC,CAAE,GAAGE,EAAE;EACb,OAAOF,GAAG;AACX;;AAGA;;AAEAQ,MAAM,CAACC,OAAO,GAAGV,IAAI","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}