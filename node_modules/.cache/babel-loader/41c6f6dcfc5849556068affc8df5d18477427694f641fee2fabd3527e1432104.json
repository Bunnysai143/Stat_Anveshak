{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/albeta.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\nvar gammaln = require('@stdlib/math-base-special-gammaln');\nvar log1p = require('@stdlib/math-base-special-log1p');\nvar gamma = require('@stdlib/math-base-special-gamma');\nvar max = require('@stdlib/math-base-special-max');\nvar min = require('@stdlib/math-base-special-min');\nvar ln = require('@stdlib/math-base-special-ln');\nvar LN_SQRT_TWO_PI = require('@stdlib/constants-float64-ln-sqrt-two-pi');\nvar NINF = require('@stdlib/constants-float64-ninf');\nvar PINF = require('@stdlib/constants-float64-pinf');\nvar correction = require('./gamma_correction.js');\n\n// MAIN //\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @param {NonNegativeNumber} a - first input value\n* @param {NonNegativeNumber} b - second input value\n* @returns {number} natural logarithm of beta function\n*\n* @example\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* @example\n* var v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* @example\n* var v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\nfunction betaln(a, b) {\n  var corr;\n  var p;\n  var q;\n  p = min(a, b);\n  q = max(a, b);\n  if (p < 0.0) {\n    return NaN;\n  }\n  if (p === 0.0) {\n    return PINF;\n  }\n  if (q === PINF) {\n    return NINF;\n  }\n  // Case: p and q are big\n  if (p >= 10.0) {\n    corr = correction(p) + correction(q) - correction(p + q);\n    return -0.5 * ln(q) + LN_SQRT_TWO_PI + corr + (p - 0.5) * ln(p / (p + q)) + q * log1p(-p / (p + q)); // eslint-disable-line max-len\n  }\n  // Case: p is small, but q is big\n  if (q >= 10.0) {\n    corr = correction(q) - correction(p + q);\n    return gammaln(p) + corr + p - p * ln(p + q) + (q - 0.5) * log1p(-p / (p + q)); // eslint-disable-line max-len\n  }\n  // Case: p and q are small\n  return ln(gamma(p) * (gamma(q) / gamma(p + q)));\n}\n\n// EXPORTS //\n\nmodule.exports = betaln;","map":{"version":3,"names":["gammaln","require","log1p","gamma","max","min","ln","LN_SQRT_TWO_PI","NINF","PINF","correction","betaln","a","b","corr","p","q","NaN","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-betaln/lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The code is adapted from the Fortran routine from the FNLIB library of the [SLATEC Common Mathematical Library]{@link http://www.netlib.no/netlib/slatec/fnlib/albeta.f}.\n*\n* The original code was developed by W. Fullerton of Los Alamos Scientific Laboratory, a governmental institution, and is therefore public domain.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar gammaln = require( '@stdlib/math-base-special-gammaln' );\nvar log1p = require( '@stdlib/math-base-special-log1p' );\nvar gamma = require( '@stdlib/math-base-special-gamma' );\nvar max = require( '@stdlib/math-base-special-max' );\nvar min = require( '@stdlib/math-base-special-min' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LN_SQRT_TWO_PI = require( '@stdlib/constants-float64-ln-sqrt-two-pi' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar correction = require( './gamma_correction.js' );\n\n\n// MAIN //\n\n/**\n* Evaluate the natural logarithm of the beta function.\n*\n* @param {NonNegativeNumber} a - first input value\n* @param {NonNegativeNumber} b - second input value\n* @returns {number} natural logarithm of beta function\n*\n* @example\n* var v = betaln( 0.0, 0.0 );\n* // returns Infinity\n*\n* @example\n* var v = betaln( 1.0, 1.0 );\n* // returns 0.0\n*\n* @example\n* var v = betaln( -1.0, 2.0 );\n* // returns NaN\n*\n* @example\n* var v = betaln( 5.0, 0.2 );\n* // returns ~1.218\n*\n* @example\n* var v = betaln( 4.0, 1.0 );\n* // returns ~-1.386\n*\n* @example\n* var v = betaln( NaN, 2.0 );\n* // returns NaN\n*/\nfunction betaln( a, b ) {\n\tvar corr;\n\tvar p;\n\tvar q;\n\n\tp = min( a, b );\n\tq = max( a, b );\n\n\tif ( p < 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( p === 0.0 ) {\n\t\treturn PINF;\n\t}\n\tif ( q === PINF ) {\n\t\treturn NINF;\n\t}\n\t// Case: p and q are big\n\tif ( p >= 10.0 ) {\n\t\tcorr = correction( p ) + correction( q ) - correction( p+q );\n\t\treturn ( -0.5*ln( q ) ) + LN_SQRT_TWO_PI + corr + ( (p-0.5) * ln( p/(p+q) ) ) + ( q*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p is small, but q is big\n\tif ( q >= 10.0 ) {\n\t\tcorr = correction( q ) - correction( p+q );\n\t\treturn gammaln( p ) + corr + p - (p*ln( p+q )) + ( (q-0.5)*log1p( -p/(p+q) ) ); // eslint-disable-line max-len\n\t}\n\t// Case: p and q are small\n\treturn ln( gamma( p ) * ( gamma( q ) / gamma( p+q ) ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = betaln;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAE,mCAAoC,CAAC;AAC5D,IAAIC,KAAK,GAAGD,OAAO,CAAE,iCAAkC,CAAC;AACxD,IAAIE,KAAK,GAAGF,OAAO,CAAE,iCAAkC,CAAC;AACxD,IAAIG,GAAG,GAAGH,OAAO,CAAE,+BAAgC,CAAC;AACpD,IAAII,GAAG,GAAGJ,OAAO,CAAE,+BAAgC,CAAC;AACpD,IAAIK,EAAE,GAAGL,OAAO,CAAE,8BAA+B,CAAC;AAClD,IAAIM,cAAc,GAAGN,OAAO,CAAE,0CAA2C,CAAC;AAC1E,IAAIO,IAAI,GAAGP,OAAO,CAAE,gCAAiC,CAAC;AACtD,IAAIQ,IAAI,GAAGR,OAAO,CAAE,gCAAiC,CAAC;AACtD,IAAIS,UAAU,GAAGT,OAAO,CAAE,uBAAwB,CAAC;;AAGnD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASU,MAAMA,CAAEC,CAAC,EAAEC,CAAC,EAAG;EACvB,IAAIC,IAAI;EACR,IAAIC,CAAC;EACL,IAAIC,CAAC;EAELD,CAAC,GAAGV,GAAG,CAAEO,CAAC,EAAEC,CAAE,CAAC;EACfG,CAAC,GAAGZ,GAAG,CAAEQ,CAAC,EAAEC,CAAE,CAAC;EAEf,IAAKE,CAAC,GAAG,GAAG,EAAG;IACd,OAAOE,GAAG;EACX;EACA,IAAKF,CAAC,KAAK,GAAG,EAAG;IAChB,OAAON,IAAI;EACZ;EACA,IAAKO,CAAC,KAAKP,IAAI,EAAG;IACjB,OAAOD,IAAI;EACZ;EACA;EACA,IAAKO,CAAC,IAAI,IAAI,EAAG;IAChBD,IAAI,GAAGJ,UAAU,CAAEK,CAAE,CAAC,GAAGL,UAAU,CAAEM,CAAE,CAAC,GAAGN,UAAU,CAAEK,CAAC,GAACC,CAAE,CAAC;IAC5D,OAAS,CAAC,GAAG,GAACV,EAAE,CAAEU,CAAE,CAAC,GAAKT,cAAc,GAAGO,IAAI,GAAK,CAACC,CAAC,GAAC,GAAG,IAAIT,EAAE,CAAES,CAAC,IAAEA,CAAC,GAACC,CAAC,CAAE,CAAG,GAAKA,CAAC,GAACd,KAAK,CAAE,CAACa,CAAC,IAAEA,CAAC,GAACC,CAAC,CAAE,CAAG,CAAC,CAAC;EAC1G;EACA;EACA,IAAKA,CAAC,IAAI,IAAI,EAAG;IAChBF,IAAI,GAAGJ,UAAU,CAAEM,CAAE,CAAC,GAAGN,UAAU,CAAEK,CAAC,GAACC,CAAE,CAAC;IAC1C,OAAOhB,OAAO,CAAEe,CAAE,CAAC,GAAGD,IAAI,GAAGC,CAAC,GAAIA,CAAC,GAACT,EAAE,CAAES,CAAC,GAACC,CAAE,CAAE,GAAK,CAACA,CAAC,GAAC,GAAG,IAAEd,KAAK,CAAE,CAACa,CAAC,IAAEA,CAAC,GAACC,CAAC,CAAE,CAAG,CAAC,CAAC;EACjF;EACA;EACA,OAAOV,EAAE,CAAEH,KAAK,CAAEY,CAAE,CAAC,IAAKZ,KAAK,CAAEa,CAAE,CAAC,GAAGb,KAAK,CAAEY,CAAC,GAACC,CAAE,CAAC,CAAG,CAAC;AACxD;;AAGA;;AAEAE,MAAM,CAACC,OAAO,GAAGR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}