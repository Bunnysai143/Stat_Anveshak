{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIP-PROJECT-WORK\\\\stat\\\\src\\\\components\\\\CoreStatistics.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport * as ss from \"simple-statistics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoreStatistics = ({\n  data,\n  columnHeaders\n}) => {\n  _s();\n  const calculateStatistics = column => {\n    const colIndex = columnHeaders.indexOf(column);\n    const columnData = data.map(row => parseFloat(row[colIndex])).filter(val => !isNaN(val));\n    if (columnData.length === 0) return {};\n    return {\n      mean: ss.mean(columnData).toFixed(2),\n      median: ss.median(columnData).toFixed(2),\n      mode: ss.mode(columnData),\n      variance: ss.variance(columnData).toFixed(2),\n      stdDev: ss.standardDeviation(columnData).toFixed(2)\n    };\n  };\n  const [selectedColumn, setSelectedColumn] = React.useState(\"\");\n  const stats = selectedColumn ? calculateStatistics(selectedColumn) : {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedColumn(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a column\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), columnHeaders.map(header => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: header\n      }, header, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 40\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selectedColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mean: \", stats.mean]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Median: \", stats.median]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mode: \", stats.mode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Variance: \", stats.variance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"StdDev: \", stats.stdDev]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CoreStatistics, \"J1hSsk4HE20Dez82ZZvrSTvTsKE=\");\n_c = CoreStatistics;\nexport default CoreStatistics;\nvar _c;\n$RefreshReg$(_c, \"CoreStatistics\");","map":{"version":3,"names":["React","ss","jsxDEV","_jsxDEV","CoreStatistics","data","columnHeaders","_s","calculateStatistics","column","colIndex","indexOf","columnData","map","row","parseFloat","filter","val","isNaN","length","mean","toFixed","median","mode","variance","stdDev","standardDeviation","selectedColumn","setSelectedColumn","useState","stats","children","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","header","_c","$RefreshReg$"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/src/components/CoreStatistics.js"],"sourcesContent":["import React from \"react\";\r\nimport * as ss from \"simple-statistics\";\r\n\r\nconst CoreStatistics = ({ data, columnHeaders }) => {\r\n  const calculateStatistics = (column) => {\r\n    const colIndex = columnHeaders.indexOf(column);\r\n    const columnData = data.map((row) => parseFloat(row[colIndex])).filter((val) => !isNaN(val));\r\n    if (columnData.length === 0) return {};\r\n\r\n    return {\r\n      mean: ss.mean(columnData).toFixed(2),\r\n      median: ss.median(columnData).toFixed(2),\r\n      mode: ss.mode(columnData),\r\n      variance: ss.variance(columnData).toFixed(2),\r\n      stdDev: ss.standardDeviation(columnData).toFixed(2),\r\n    };\r\n  };\r\n\r\n  const [selectedColumn, setSelectedColumn] = React.useState(\"\");\r\n  const stats = selectedColumn ? calculateStatistics(selectedColumn) : {};\r\n\r\n  return (\r\n    <div>\r\n      <select onChange={(e) => setSelectedColumn(e.target.value)}>\r\n        <option value=\"\">Select a column</option>\r\n        {columnHeaders.map((header) => <option key={header}>{header}</option>)}\r\n      </select>\r\n      {selectedColumn && (\r\n        <div>\r\n          <p>Mean: {stats.mean}</p>\r\n          <p>Median: {stats.median}</p>\r\n          <p>Mode: {stats.mode}</p>\r\n          <p>Variance: {stats.variance}</p> \r\n          <p>StdDev: {stats.stdDev}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoreStatistics;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}