{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIP-PROJECT-WORK\\\\stat\\\\src\\\\components\\\\DistributionAnalysis.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as ss from \"simple-statistics\";\nimport { Line } from \"react-chartjs-2\"; // Import Chart.js Line chart\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\nimport \"../sty/DistributionAnalysis.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst DistributionAnalysis = ({\n  data,\n  columnHeaders\n}) => {\n  _s();\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\n  const [selectedDistributionType, setSelectedDistributionType] = useState(\"\");\n  const [selectedDistribution, setSelectedDistribution] = useState(\"\");\n  const [statistics, setStatistics] = useState({});\n  const [chartData, setChartData] = useState(null);\n  const continuousDistributions = [\"Normal\", \"Exponential\", \"Uniform\"];\n  const discreteDistributions = [\"Binomial\", \"Poisson\", \"Geometric\"];\n  const handleColumnChange = event => {\n    const column = event.target.value;\n    setSelectedColumn(column);\n    setStatistics({});\n    setChartData(null);\n    setSelectedDistributionType(\"\");\n    setSelectedDistribution(\"\");\n    if (column) {\n      const colIndex = columnHeaders.indexOf(column);\n      const columnData = data.map(row => parseFloat(row[colIndex])).filter(val => !isNaN(val));\n      if (columnData.length === 0) return;\n      const meanVal = ss.mean(columnData);\n      const stdDevVal = ss.standardDeviation(columnData);\n      const medianVal = ss.median(columnData);\n      const varianceVal = ss.variance(columnData);\n      setStatistics({\n        mean: meanVal.toFixed(2),\n        median: medianVal.toFixed(2),\n        variance: varianceVal.toFixed(2),\n        stdDev: stdDevVal.toFixed(2)\n      });\n    }\n  };\n  const handleDistributionTypeChange = event => {\n    setSelectedDistributionType(event.target.value);\n    setSelectedDistribution(\"\");\n    setChartData(null);\n  };\n  const handleDistributionChange = event => {\n    const distribution = event.target.value;\n    setSelectedDistribution(distribution);\n    if (distribution && selectedColumn) {\n      const colIndex = columnHeaders.indexOf(selectedColumn);\n      const columnData = data.map(row => parseFloat(row[colIndex])).filter(val => !isNaN(val));\n      if (columnData.length === 0) return;\n\n      // Generate chart data for the selected distribution\n      const labels = Array.from({\n        length: columnData.length\n      }, (_, index) => index + 1);\n      let distributionData = [];\n      switch (distribution) {\n        case \"Normal\":\n          distributionData = columnData.map(val => ss.zScore(val, ss.mean(columnData), ss.standardDeviation(columnData)));\n          break;\n        case \"Exponential\":\n          distributionData = columnData.map(val => Math.exp(-val / ss.mean(columnData)));\n          break;\n        case \"Uniform\":\n          distributionData = columnData.map(val => 1 / (Math.max(...columnData) - Math.min(...columnData)));\n          break;\n        case \"Binomial\":\n          distributionData = columnData.map(val => ss.binomialDistribution(val, Math.max(...columnData), 0.5));\n          break;\n        case \"Poisson\":\n          distributionData = columnData.map(val => ss.poissonDistribution(val, ss.mean(columnData)));\n          break;\n        case \"Geometric\":\n          distributionData = columnData.map(val => ss.geometricMean([val]));\n          break;\n        default:\n          break;\n      }\n      setChartData({\n        labels,\n        datasets: [{\n          label: `${selectedDistribution} Distribution`,\n          data: distributionData,\n          fill: false,\n          borderColor: \"rgba(75,192,192,1)\",\n          tension: 0.1\n        }]\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"distribution-analysis-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"header\",\n      children: \"Distribution Analysis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Select Column:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleColumnChange,\n              className: \"select-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a column\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), columnHeaders.map(header => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: header,\n                children: header\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), selectedColumn && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"label\",\n            children: [\"Select Distribution Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: handleDistributionTypeChange,\n              className: \"select-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Continuous\",\n                children: \"Continuous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Discrete\",\n                children: \"Discrete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), selectedDistributionType && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribution-options\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\"Select \", selectedDistributionType, \" Distribution:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: handleDistributionChange,\n            className: \"select-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), (selectedDistributionType === \"Continuous\" ? continuousDistributions : discreteDistributions).map(dist => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: dist,\n              children: dist\n            }, dist, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), selectedColumn && statistics.mean && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"statistics\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Statistics for \", selectedColumn]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mean:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this), \" \", statistics.mean]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Median:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), \" \", statistics.median]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Variance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this), \" \", statistics.variance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Standard Deviation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), \" \", statistics.stdDev]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), chartData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            title: {\n              display: true,\n              text: `${selectedDistribution} Distribution for ${selectedColumn}`\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_s(DistributionAnalysis, \"rsi8wIUyYavgIBX7evvdGTNBlLE=\");\n_c = DistributionAnalysis;\nexport default DistributionAnalysis;\nvar _c;\n$RefreshReg$(_c, \"DistributionAnalysis\");","map":{"version":3,"names":["React","useState","ss","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","DistributionAnalysis","data","columnHeaders","_s","selectedColumn","setSelectedColumn","selectedDistributionType","setSelectedDistributionType","selectedDistribution","setSelectedDistribution","statistics","setStatistics","chartData","setChartData","continuousDistributions","discreteDistributions","handleColumnChange","event","column","target","value","colIndex","indexOf","columnData","map","row","parseFloat","filter","val","isNaN","length","meanVal","mean","stdDevVal","standardDeviation","medianVal","median","varianceVal","variance","toFixed","stdDev","handleDistributionTypeChange","handleDistributionChange","distribution","labels","Array","from","_","index","distributionData","zScore","Math","exp","max","min","binomialDistribution","poissonDistribution","geometricMean","datasets","label","fill","borderColor","tension","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","header","dist","options","responsive","plugins","title","display","text","_c","$RefreshReg$"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/src/components/DistributionAnalysis.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as ss from \"simple-statistics\";\r\nimport { Line } from \"react-chartjs-2\"; // Import Chart.js Line chart\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\r\nimport \"../sty/DistributionAnalysis.css\"; // Import the CSS file\r\n\r\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nconst DistributionAnalysis = ({ data, columnHeaders }) => {\r\n  const [selectedColumn, setSelectedColumn] = useState(\"\");\r\n  const [selectedDistributionType, setSelectedDistributionType] = useState(\"\");\r\n  const [selectedDistribution, setSelectedDistribution] = useState(\"\");\r\n  const [statistics, setStatistics] = useState({});\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const continuousDistributions = [\"Normal\", \"Exponential\", \"Uniform\"];\r\n  const discreteDistributions = [\"Binomial\", \"Poisson\", \"Geometric\"];\r\n\r\n  const handleColumnChange = (event) => {\r\n    const column = event.target.value;\r\n    setSelectedColumn(column);\r\n    setStatistics({});\r\n    setChartData(null);\r\n    setSelectedDistributionType(\"\");\r\n    setSelectedDistribution(\"\");\r\n    \r\n    if (column) {\r\n      const colIndex = columnHeaders.indexOf(column);\r\n      const columnData = data\r\n        .map((row) => parseFloat(row[colIndex]))\r\n        .filter((val) => !isNaN(val));\r\n\r\n      if (columnData.length === 0) return;\r\n\r\n      const meanVal = ss.mean(columnData);\r\n      const stdDevVal = ss.standardDeviation(columnData);\r\n      const medianVal = ss.median(columnData);\r\n      const varianceVal = ss.variance(columnData);\r\n\r\n      setStatistics({\r\n        mean: meanVal.toFixed(2),\r\n        median: medianVal.toFixed(2),\r\n        variance: varianceVal.toFixed(2),\r\n        stdDev: stdDevVal.toFixed(2),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDistributionTypeChange = (event) => {\r\n    setSelectedDistributionType(event.target.value);\r\n    setSelectedDistribution(\"\");\r\n    setChartData(null);\r\n  };\r\n\r\n  const handleDistributionChange = (event) => {\r\n    const distribution = event.target.value;\r\n    setSelectedDistribution(distribution);\r\n\r\n    if (distribution && selectedColumn) {\r\n      const colIndex = columnHeaders.indexOf(selectedColumn);\r\n      const columnData = data\r\n        .map((row) => parseFloat(row[colIndex]))\r\n        .filter((val) => !isNaN(val));\r\n\r\n      if (columnData.length === 0) return;\r\n\r\n      // Generate chart data for the selected distribution\r\n      const labels = Array.from({ length: columnData.length }, (_, index) => index + 1);\r\n      let distributionData = [];\r\n\r\n      switch (distribution) {\r\n        case \"Normal\":\r\n          distributionData = columnData.map((val) => ss.zScore(val, ss.mean(columnData), ss.standardDeviation(columnData)));\r\n          break;\r\n        case \"Exponential\":\r\n          distributionData = columnData.map((val) => Math.exp(-val / ss.mean(columnData)));\r\n          break;\r\n        case \"Uniform\":\r\n          distributionData = columnData.map((val) => 1 / (Math.max(...columnData) - Math.min(...columnData)));\r\n          break;\r\n        case \"Binomial\":\r\n          distributionData = columnData.map((val) => ss.binomialDistribution(val, Math.max(...columnData), 0.5));\r\n          break;\r\n        case \"Poisson\":\r\n          distributionData = columnData.map((val) => ss.poissonDistribution(val, ss.mean(columnData)));\r\n          break;\r\n        case \"Geometric\":\r\n          distributionData = columnData.map((val) => ss.geometricMean([val]));\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setChartData({\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: `${selectedDistribution} Distribution`,\r\n            data: distributionData,\r\n            fill: false,\r\n            borderColor: \"rgba(75,192,192,1)\",\r\n            tension: 0.1,\r\n          },\r\n        ],\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"distribution-analysis-container\">\r\n      <h3 className=\"header\">Distribution Analysis</h3>\r\n      <div className=\"form-container\">\r\n        <div className=\"select-container\">\r\n          <div>\r\n            <label className=\"label\">\r\n              Select Column:\r\n              <select \r\n                onChange={handleColumnChange} \r\n                className=\"select-input\"\r\n              >\r\n                <option value=\"\">Select a column</option>\r\n                {columnHeaders.map((header) => (\r\n                  <option key={header} value={header}>\r\n                    {header}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n\r\n          {selectedColumn && (\r\n            <div>\r\n              <label className=\"label\">\r\n                Select Distribution Type:\r\n                <select \r\n                  onChange={handleDistributionTypeChange} \r\n                  className=\"select-input\"\r\n                >\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"Continuous\">Continuous</option>\r\n                  <option value=\"Discrete\">Discrete</option>\r\n                </select>\r\n              </label>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {selectedDistributionType && (\r\n          <div className=\"distribution-options\">\r\n            <label className=\"label\">\r\n              Select {selectedDistributionType} Distribution:\r\n              <select \r\n                onChange={handleDistributionChange} \r\n                className=\"select-input\"\r\n              >\r\n                <option value=\"\">Select Distribution</option>\r\n                {(selectedDistributionType === \"Continuous\" ? continuousDistributions : discreteDistributions).map((dist) => (\r\n                  <option key={dist} value={dist}>\r\n                    {dist}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </label>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {selectedColumn && statistics.mean && (\r\n        <div className=\"statistics\">\r\n          <h4>Statistics for {selectedColumn}</h4>\r\n          <ul>\r\n            <li><strong>Mean:</strong> {statistics.mean}</li>\r\n            <li><strong>Median:</strong> {statistics.median}</li>\r\n            <li><strong>Variance:</strong> {statistics.variance}</li>\r\n            <li><strong>Standard Deviation:</strong> {statistics.stdDev}</li>\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {chartData && (\r\n        <div className=\"chart-container\">\r\n          <Line\r\n            data={chartData}\r\n            options={{\r\n              responsive: true,\r\n              plugins: { title: { display: true, text: `${selectedDistribution} Distribution for ${selectedColumn}` } },\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DistributionAnalysis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}