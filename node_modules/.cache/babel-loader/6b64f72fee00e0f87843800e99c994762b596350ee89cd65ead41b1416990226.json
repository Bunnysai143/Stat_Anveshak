{"ast":null,"code":"/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\nvar ABS_MASK = require('@stdlib/constants-float64-high-word-abs-mask');\nvar getHighWord = require('@stdlib/number-float64-base-get-high-word');\n\n// VARIABLES //\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff | 0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow(x, y) {\n  var ahx;\n  var hx;\n  hx = getHighWord(x);\n  ahx = hx & ABS_MASK;\n  if (ahx <= HIGH_MAX_NEAR_UNITY) {\n    if (y < 0) {\n      // Signal overflow...\n      return HUGE * HUGE;\n    }\n    // Signal underflow...\n    return TINY * TINY;\n  }\n  // `x` has a biased exponent greater than or equal to `0`...\n\n  if (y > 0) {\n    // Signal overflow...\n    return HUGE * HUGE;\n  }\n  // Signal underflow...\n  return TINY * TINY;\n}\n\n// EXPORTS //\n\nmodule.exports = pow;","map":{"version":3,"names":["ABS_MASK","require","getHighWord","HIGH_MAX_NEAR_UNITY","HUGE","TINY","pow","x","y","ahx","hx","module","exports"],"sources":["D:/INTERNSHIP-PROJECT-WORK/stat/node_modules/@stdlib/math-base-special-pow/lib/y_is_huge.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*\n*\n* ## Notice\n*\n* The following copyright and license were part of the original implementation available as part of [FreeBSD]{@link https://svnweb.freebsd.org/base/release/9.3.0/lib/msun/src/s_pow.c}. The implementation follows the original, but has been modified for JavaScript.\n*\n* ```text\n* Copyright (C) 2004 by Sun Microsystems, Inc. All rights reserved.\n*\n* Developed at SunPro, a Sun Microsystems, Inc. business.\n* Permission to use, copy, modify, and distribute this\n* software is freely granted, provided that this notice\n* is preserved.\n* ```\n*/\n\n'use strict';\n\n// MODULES //\n\nvar ABS_MASK = require( '@stdlib/constants-float64-high-word-abs-mask' );\nvar getHighWord = require( '@stdlib/number-float64-base-get-high-word' );\n\n\n// VARIABLES //\n\n// 0x3fefffff = 1072693247 => 0 01111111110 11111111111111111111 => biased exponent: 1022 = -1+1023 => 2^-1\nvar HIGH_MAX_NEAR_UNITY = 0x3fefffff|0; // asm type annotation\n\nvar HUGE = 1.0e300;\nvar TINY = 1.0e-300;\n\n\n// MAIN //\n\n/**\n* Evaluates the exponential function when \\\\(|y| > 2^64\\\\).\n*\n* @private\n* @param {number} x - base\n* @param {number} y - exponent\n* @returns {number} overflow or underflow result\n*\n* @example\n* var v = pow( 9.0, 3.6893488147419103e19 );\n* // returns Infinity\n*\n* @example\n* var v = pow( -3.14, -3.6893488147419103e19 );\n* // returns 0.0\n*/\nfunction pow( x, y ) {\n\tvar ahx;\n\tvar hx;\n\n\thx = getHighWord( x );\n\tahx = (hx & ABS_MASK);\n\n\tif ( ahx <= HIGH_MAX_NEAR_UNITY ) {\n\t\tif ( y < 0 ) {\n\t\t\t// Signal overflow...\n\t\t\treturn HUGE * HUGE;\n\t\t}\n\t\t// Signal underflow...\n\t\treturn TINY * TINY;\n\t}\n\t// `x` has a biased exponent greater than or equal to `0`...\n\n\tif ( y > 0 ) {\n\t\t// Signal overflow...\n\t\treturn HUGE * HUGE;\n\t}\n\t// Signal underflow...\n\treturn TINY * TINY;\n}\n\n\n// EXPORTS //\n\nmodule.exports = pow;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAE,8CAA+C,CAAC;AACxE,IAAIC,WAAW,GAAGD,OAAO,CAAE,2CAA4C,CAAC;;AAGxE;;AAEA;AACA,IAAIE,mBAAmB,GAAG,UAAU,GAAC,CAAC,CAAC,CAAC;;AAExC,IAAIC,IAAI,GAAG,OAAO;AAClB,IAAIC,IAAI,GAAG,QAAQ;;AAGnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,GAAGA,CAAEC,CAAC,EAAEC,CAAC,EAAG;EACpB,IAAIC,GAAG;EACP,IAAIC,EAAE;EAENA,EAAE,GAAGR,WAAW,CAAEK,CAAE,CAAC;EACrBE,GAAG,GAAIC,EAAE,GAAGV,QAAS;EAErB,IAAKS,GAAG,IAAIN,mBAAmB,EAAG;IACjC,IAAKK,CAAC,GAAG,CAAC,EAAG;MACZ;MACA,OAAOJ,IAAI,GAAGA,IAAI;IACnB;IACA;IACA,OAAOC,IAAI,GAAGA,IAAI;EACnB;EACA;;EAEA,IAAKG,CAAC,GAAG,CAAC,EAAG;IACZ;IACA,OAAOJ,IAAI,GAAGA,IAAI;EACnB;EACA;EACA,OAAOC,IAAI,GAAGA,IAAI;AACnB;;AAGA;;AAEAM,MAAM,CAACC,OAAO,GAAGN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}